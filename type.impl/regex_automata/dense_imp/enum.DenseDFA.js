(function() {var type_impls = {
"index":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DenseDFA%3CVec%3Cusize%3E,+usize%3E\" class=\"impl\"><a href=\"#impl-DenseDFA%3CVec%3Cusize%3E,+usize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DenseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(pattern: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DenseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Parse the given regular expression using a default configuration and\nreturn the corresponding DFA.</p>\n<p>The default configuration uses <code>usize</code> for state IDs, premultiplies\nthem and reduces the alphabet size by splitting bytes into equivalence\nclasses. The DFA is <em>not</em> minimized.</p>\n<p>If you want a non-default configuration, then use the\n<a href=\"dense/struct.Builder.html\"><code>dense::Builder</code></a>\nto set your own configuration.</p>\n<h5 id=\"example\"><a href=\"#example\">Example</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>regex_automata::{DFA, DenseDFA};\n\n<span class=\"kw\">let </span>dfa = DenseDFA::new(<span class=\"string\">\"foo[0-9]+bar\"</span>)<span class=\"question-mark\">?</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">11</span>), dfa.find(<span class=\"string\">b\"foo12345bar\"</span>));</code></pre></div>\n</div></details></div></details>",0,"index::inverted_index::search::fst_apply::intersection_apply::Dfa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DenseDFA%3CVec%3CS%3E,+S%3E\" class=\"impl\"><a href=\"#impl-DenseDFA%3CVec%3CS%3E,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; DenseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;S&gt;, S&gt;<div class=\"where\">where\n    S: StateID,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">empty</a>() -&gt; DenseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;S&gt;, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new empty DFA that never matches any input.</p>\n<h5 id=\"example\"><a href=\"#example\">Example</a></h5>\n<p>In order to build an empty DFA, callers must provide a type hint\nindicating their choice of state identifier representation.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>regex_automata::{DFA, DenseDFA};\n\n<span class=\"kw\">let </span>dfa: DenseDFA&lt;Vec&lt;usize&gt;, usize&gt; = DenseDFA::empty();\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, dfa.find(<span class=\"string\">b\"\"</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, dfa.find(<span class=\"string\">b\"foo\"</span>));</code></pre></div>\n</div></details></div></details>",0,"index::inverted_index::search::fst_apply::intersection_apply::Dfa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DenseDFA%3CT,+S%3E\" class=\"impl\"><a href=\"#impl-DenseDFA%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; DenseDFA&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>&gt;,\n    S: StateID,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_ref</a>&lt;'a&gt;(&amp;'a self) -&gt; DenseDFA&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>, S&gt;</h4></section></summary><div class=\"docblock\"><p>Cheaply return a borrowed version of this dense DFA. Specifically, the\nDFA returned always uses <code>&amp;[S]</code> for its transition table while keeping\nthe same state identifier representation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_owned\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_owned</a>(&amp;self) -&gt; DenseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;S&gt;, S&gt;</h4></section></summary><div class=\"docblock\"><p>Return an owned version of this sparse DFA. Specifically, the DFA\nreturned always uses <code>Vec&lt;u8&gt;</code> for its transition table while keeping\nthe same state identifier representation.</p>\n<p>Effectively, this returns a sparse DFA whose transition table lives\non the heap.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.memory_usage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">memory_usage</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the memory usage, in bytes, of this DFA.</p>\n<p>The memory usage is computed based on the number of bytes used to\nrepresent this DFA’s transition table. This corresponds to heap memory\nusage.</p>\n<p>This does <strong>not</strong> include the stack size used up by this DFA. To\ncompute that, used <code>std::mem::size_of::&lt;DenseDFA&gt;()</code>.</p>\n</div></details></div></details>",0,"index::inverted_index::search::fst_apply::intersection_apply::Dfa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DenseDFA%3CT,+S%3E\" class=\"impl\"><a href=\"#impl-DenseDFA%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; DenseDFA&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>&gt;,\n    S: StateID,</div></h3></section></summary><div class=\"docblock\"><p>Routines for converting a dense DFA to other representations, such as\nsparse DFAs, smaller state identifiers or raw bytes suitable for persistent\nstorage.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_sparse\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_sparse</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;SparseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, S&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Convert this dense DFA to a sparse DFA.</p>\n<p>This is a convenience routine for <code>to_sparse_sized</code> that fixes the\nstate identifier representation of the sparse DFA to the same\nrepresentation used for this dense DFA.</p>\n<p>If the chosen state identifier representation is too small to represent\nall states in the sparse DFA, then this returns an error. In most\ncases, if a dense DFA is constructable with <code>S</code> then a sparse DFA will\nbe as well. However, it is not guaranteed.</p>\n<h5 id=\"example\"><a href=\"#example\">Example</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>regex_automata::{DFA, DenseDFA};\n\n<span class=\"kw\">let </span>dense = DenseDFA::new(<span class=\"string\">\"foo[0-9]+\"</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>sparse = dense.to_sparse()<span class=\"question-mark\">?</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">8</span>), sparse.find(<span class=\"string\">b\"foo12345\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_sparse_sized\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_sparse_sized</a>&lt;A&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;SparseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, A&gt;, Error&gt;<div class=\"where\">where\n    A: StateID,</div></h4></section></summary><div class=\"docblock\"><p>Convert this dense DFA to a sparse DFA.</p>\n<p>Using this routine requires supplying a type hint to choose the state\nidentifier representation for the resulting sparse DFA.</p>\n<p>If the chosen state identifier representation is too small to represent\nall states in the sparse DFA, then this returns an error.</p>\n<h5 id=\"example-1\"><a href=\"#example-1\">Example</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>regex_automata::{DFA, DenseDFA};\n\n<span class=\"kw\">let </span>dense = DenseDFA::new(<span class=\"string\">\"foo[0-9]+\"</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>sparse = dense.to_sparse_sized::&lt;u8&gt;()<span class=\"question-mark\">?</span>;\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(<span class=\"number\">8</span>), sparse.find(<span class=\"string\">b\"foo12345\"</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DenseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new DFA whose match semantics are equivalent to this DFA,\nbut attempt to use <code>u8</code> for the representation of state identifiers.\nIf <code>u8</code> is insufficient to represent all state identifiers in this\nDFA, then this returns an error.</p>\n<p>This is a convenience routine for <code>to_sized::&lt;u8&gt;()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DenseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new DFA whose match semantics are equivalent to this DFA,\nbut attempt to use <code>u16</code> for the representation of state identifiers.\nIf <code>u16</code> is insufficient to represent all state identifiers in this\nDFA, then this returns an error.</p>\n<p>This is a convenience routine for <code>to_sized::&lt;u16&gt;()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DenseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new DFA whose match semantics are equivalent to this DFA,\nbut attempt to use <code>u32</code> for the representation of state identifiers.\nIf <code>u32</code> is insufficient to represent all state identifiers in this\nDFA, then this returns an error.</p>\n<p>This is a convenience routine for <code>to_sized::&lt;u32&gt;()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DenseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new DFA whose match semantics are equivalent to this DFA,\nbut attempt to use <code>u64</code> for the representation of state identifiers.\nIf <code>u64</code> is insufficient to represent all state identifiers in this\nDFA, then this returns an error.</p>\n<p>This is a convenience routine for <code>to_sized::&lt;u64&gt;()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_sized\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_sized</a>&lt;A&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DenseDFA&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;A&gt;, A&gt;, Error&gt;<div class=\"where\">where\n    A: StateID,</div></h4></section></summary><div class=\"docblock\"><p>Create a new DFA whose match semantics are equivalent to this DFA, but\nattempt to use <code>A</code> for the representation of state identifiers. If <code>A</code>\nis insufficient to represent all state identifiers in this DFA, then\nthis returns an error.</p>\n<p>An alternative way to construct such a DFA is to use\n<a href=\"dense/struct.Builder.html#method.build_with_size\"><code>dense::Builder::build_with_size</code></a>.\nIn general, using the builder is preferred since it will use the given\nstate identifier representation throughout determinization (and\nminimization, if done), and thereby using less memory throughout the\nentire construction process. However, these routines are necessary\nin cases where, say, a minimized DFA could fit in a smaller state\nidentifier representation, but the initial determinized DFA would not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes_little_endian\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_bytes_little_endian</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Serialize a DFA to raw bytes, aligned to an 8 byte boundary, in little\nendian format.</p>\n<p>If the state identifier representation of this DFA has a size different\nthan 1, 2, 4 or 8 bytes, then this returns an error. All\nimplementations of <code>StateID</code> provided by this crate satisfy this\nrequirement.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes_big_endian\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_bytes_big_endian</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Serialize a DFA to raw bytes, aligned to an 8 byte boundary, in big\nendian format.</p>\n<p>If the state identifier representation of this DFA has a size different\nthan 1, 2, 4 or 8 bytes, then this returns an error. All\nimplementations of <code>StateID</code> provided by this crate satisfy this\nrequirement.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes_native_endian\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_bytes_native_endian</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, Error&gt;</h4></section></summary><div class=\"docblock\"><p>Serialize a DFA to raw bytes, aligned to an 8 byte boundary, in native\nendian format. Generally, it is better to pick an explicit endianness\nusing either <code>to_bytes_little_endian</code> or <code>to_bytes_big_endian</code>. This\nroutine is useful in tests where the DFA is serialized and deserialized\non the same platform.</p>\n<p>If the state identifier representation of this DFA has a size different\nthan 1, 2, 4 or 8 bytes, then this returns an error. All\nimplementations of <code>StateID</code> provided by this crate satisfy this\nrequirement.</p>\n</div></details></div></details>",0,"index::inverted_index::search::fst_apply::intersection_apply::Dfa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DenseDFA%3CT,+S%3E\" class=\"impl\"><a href=\"#impl-Debug-for-DenseDFA%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for DenseDFA&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>&gt;,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + StateID,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","index::inverted_index::search::fst_apply::intersection_apply::Dfa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DenseDFA%3CT,+S%3E\" class=\"impl\"><a href=\"#impl-Clone-for-DenseDFA%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for DenseDFA&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>&gt;,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + StateID,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; DenseDFA&lt;T, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","index::inverted_index::search::fst_apply::intersection_apply::Dfa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DFA-for-DenseDFA%3CT,+S%3E\" class=\"impl\"><a href=\"#impl-DFA-for-DenseDFA%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; DFA for DenseDFA&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>&gt;,\n    S: StateID,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ID\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ID\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ID</a> = S</h4></section></summary><div class='docblock'>The representation used for state identifiers in this DFA. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_state\" class=\"method trait-impl\"><a href=\"#method.start_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start_state</a>(&amp;self) -&gt; S</h4></section></summary><div class='docblock'>Return the identifier of this DFA’s start state.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_match_state\" class=\"method trait-impl\"><a href=\"#method.is_match_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_match_state</a>(&amp;self, id: S) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if the given identifier corresponds to a match\nstate.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dead_state\" class=\"method trait-impl\"><a href=\"#method.is_dead_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_dead_state</a>(&amp;self, id: S) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if the given identifier corresponds to a dead\nstate. When a DFA enters a dead state, it is impossible to leave and\nthus can never lead to a match.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_match_or_dead_state\" class=\"method trait-impl\"><a href=\"#method.is_match_or_dead_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_match_or_dead_state</a>(&amp;self, id: S) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if the given identifier corresponds to either\na dead state or a match state, such that one of <code>is_match_state(id)</code>\nor <code>is_dead_state(id)</code> must return true. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_anchored\" class=\"method trait-impl\"><a href=\"#method.is_anchored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_anchored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if this DFA is anchored. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_state\" class=\"method trait-impl\"><a href=\"#method.next_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">next_state</a>(&amp;self, current: S, input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; S</h4></section></summary><div class='docblock'>Given the current state that this DFA is in and the next input byte,\nthis method returns the identifier of the next state. The identifier\nreturned is always valid, but it may correspond to a dead state.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_state_unchecked\" class=\"method trait-impl\"><a href=\"#method.next_state_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">next_state_unchecked</a>(&amp;self, current: S, input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; S</h4></section></summary><div class='docblock'>Like <code>next_state</code>, but its implementation may look up the next state\nwithout memory safety checks such as bounds checks. As such, callers\nmust ensure that the given identifier corresponds to a valid DFA\nstate. Implementors must, in turn, ensure that this routine is safe\nfor all valid state identifiers and for all possible <code>u8</code> values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_match_at\" class=\"method trait-impl\"><a href=\"#method.is_match_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_match_at</a>(&amp;self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns the same as <code>is_match</code>, but starts the search at the given\noffset. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shortest_match_at\" class=\"method trait-impl\"><a href=\"#method.shortest_match_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">shortest_match_at</a>(&amp;self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the same as <code>shortest_match</code>, but starts the search at the\ngiven offset. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_at\" class=\"method trait-impl\"><a href=\"#method.find_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">find_at</a>(&amp;self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the same as <code>find</code>, but starts the search at the given\noffset. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfind_at\" class=\"method trait-impl\"><a href=\"#method.rfind_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rfind_at</a>(&amp;self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>], start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the same as <code>rfind</code>, but starts the search at the given\noffset. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_match\" class=\"method trait-impl\"><a href=\"#method.is_match\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_match</a>(&amp;self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if the given bytes match this DFA. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shortest_match\" class=\"method trait-impl\"><a href=\"#method.shortest_match\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">shortest_match</a>(&amp;self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the first position at which a match is found. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method trait-impl\"><a href=\"#method.find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">find</a>(&amp;self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the end offset of the longest match. If no match exists,\nthen <code>None</code> is returned. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfind\" class=\"method trait-impl\"><a href=\"#method.rfind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rfind</a>(&amp;self, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the start offset of the longest match in reverse, by searching\nfrom the end of the input towards the start of the input. If no match\nexists, then <code>None</code> is returned. In other words, this has the same\nmatch semantics as <code>find</code>, but in reverse. <a>Read more</a></div></details></div></details>","DFA","index::inverted_index::search::fst_apply::intersection_apply::Dfa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Automaton-for-DenseDFA%3CT,+S%3E\" class=\"impl\"><a href=\"#impl-Automaton-for-DenseDFA%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S&gt; Automaton for DenseDFA&lt;T, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[S]</a>&gt;,\n    S: StateID,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">State</a> = S</h4></section></summary><div class='docblock'>The type of the state used in the automaton.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.start\" class=\"method trait-impl\"><a href=\"#method.start\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">start</a>(&amp;self) -&gt; S</h4></section></summary><div class='docblock'>Returns a single start state for this automaton. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_match\" class=\"method trait-impl\"><a href=\"#method.is_match\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_match</a>(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if <code>state</code> is a match state.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.accept\" class=\"method trait-impl\"><a href=\"#method.accept\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">accept</a>(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; S</h4></section></summary><div class='docblock'>Return the next state given <code>state</code> and an input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.can_match\" class=\"method trait-impl\"><a href=\"#method.can_match\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">can_match</a>(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if <code>state</code> can lead to a match in zero or more\nsteps. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.will_always_match\" class=\"method trait-impl\"><a href=\"#method.will_always_match\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">will_always_match</a>(&amp;self, _state: &amp;Self::State) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if and only if <code>state</code> matches and must match no matter\nwhat steps are taken. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.accept_eof\" class=\"method trait-impl\"><a href=\"#method.accept_eof\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">accept_eof</a>(&amp;self, _: &amp;Self::State) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::State&gt;</h4></section></summary><div class='docblock'>If applicable, return the next state when the end of a key is seen.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.starts_with\" class=\"method trait-impl\"><a href=\"#method.starts_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">starts_with</a>(self) -&gt; StartsWith&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an automaton that matches the strings that start with something\nthis automaton matches.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method trait-impl\"><a href=\"#method.union\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">union</a>&lt;Rhs&gt;(self, rhs: Rhs) -&gt; Union&lt;Self, Rhs&gt;<div class=\"where\">where\n    Rhs: Automaton,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an automaton that matches the strings matched by either this or\nthe other automaton.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method trait-impl\"><a href=\"#method.intersection\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">intersection</a>&lt;Rhs&gt;(self, rhs: Rhs) -&gt; Intersection&lt;Self, Rhs&gt;<div class=\"where\">where\n    Rhs: Automaton,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an automaton that matches the strings matched by both this and\nthe other automaton.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complement\" class=\"method trait-impl\"><a href=\"#method.complement\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">complement</a>(self) -&gt; Complement&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an automaton that matches the strings not matched by this\nautomaton.</div></details></div></details>","Automaton","index::inverted_index::search::fst_apply::intersection_apply::Dfa"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()