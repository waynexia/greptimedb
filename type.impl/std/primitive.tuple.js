(function() {var type_impls = {
"cmd":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+3%5D%3E-for-(T,+T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/tuple.rs.html#360\">source</a></span><a href=\"#impl-From%3C%5BT;+3%5D%3E-for-(T,+T,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 3]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/tuple.rs.html#360\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 3]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 3]>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/ser/impls.rs.html#406-423\">source</a><a href=\"#impl-Serialize-for-(T0,+T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T2: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/ser/impls.rs.html#406-423\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/impls.rs.html#1366-1383\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1, T2&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T2: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/impls.rs.html#1366-1383\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1, T2)</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Layer%3CS%3E-for-(L1,+L2,+L3)\" class=\"impl\"><a href=\"#impl-Layer%3CS%3E-for-(L1,+L2,+L3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, L1, L2, L3&gt; Layer&lt;S&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L1, L2, L3)</a><div class=\"where\">where\n    L1: Layer&lt;&lt;L2 as Layer&lt;&lt;L3 as Layer&lt;S&gt;&gt;::Service&gt;&gt;::Service&gt;,\n    L2: Layer&lt;&lt;L3 as Layer&lt;S&gt;&gt;::Service&gt;,\n    L3: Layer&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Service\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Service\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Service</a> = &lt;L1 as Layer&lt;&lt;L2 as Layer&lt;&lt;L3 as Layer&lt;S&gt;&gt;::Service&gt;&gt;::Service&gt;&gt;::Service</h4></section></summary><div class='docblock'>The wrapped service</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>(&amp;self, service: S) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L1, L2, L3)</a> as Layer&lt;S&gt;&gt;::Service</h4></section></summary><div class='docblock'>Wrap the given service with the middleware, returning a new service\nthat has been decorated with the middleware.</div></details></div></details>","Layer<S>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWeightedEdge%3CE%3E-for-(Ix,+Ix,+E)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/lib.rs.html#267\">source</a><a href=\"#impl-IntoWeightedEdge%3CE%3E-for-(Ix,+Ix,+E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ix, E&gt; <a class=\"trait\" href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html\" title=\"trait petgraph::IntoWeightedEdge\">IntoWeightedEdge</a>&lt;E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ix, Ix, E)</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.NodeId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NodeId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html#associatedtype.NodeId\" class=\"associatedtype\">NodeId</a> = Ix</h4></section><section id=\"method.into_weighted_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/lib.rs.html#269\">source</a><a href=\"#method.into_weighted_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html#tymethod.into_weighted_edge\" class=\"fn\">into_weighted_edge</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ix, Ix, E)</a></h4></section></div></details>","IntoWeightedEdge<E>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-(R,+S,+T)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#impl-Bounded-for-(R,+S,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R, S, T&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(R, S, T)</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,\n    S: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(R, S, T)</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(R, S, T)</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, Res, S, B&gt; Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    Res: IntoResponse,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    _req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    _state: S\n) -&gt; &lt;F as Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<((),), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T16: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7), S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRequest%3CS,+B%3E-for-(T1,+T2,+T3)\" class=\"impl\"><a href=\"#impl-FromRequest%3CS,+B%3E-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, B, T1, T2, T3&gt; FromRequest&lt;S, B&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequest&lt;S, B&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Rejection\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Rejection\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Rejection</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>If the extractor fails it’ll use this “rejection” type. A rejection is\na kind of error that can be converted into a response.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_request\" class=\"method trait-impl\"><a href=\"#method.from_request\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_request</a>&lt;'life0, 'async_trait&gt;(\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'life0 S</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a> as FromRequest&lt;S, B&gt;&gt;::Rejection&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a>: 'async_trait,</div></h4></section></summary><div class='docblock'>Perform the extraction.</div></details></div></details>","FromRequest<S, B>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponseParts-for-(T1,+T2,+T3)\" class=\"impl\"><a href=\"#impl-IntoResponseParts-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, T3&gt; IntoResponseParts for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: IntoResponseParts,\n    T2: IntoResponseParts,\n    T3: IntoResponseParts,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>The type returned in the event of an error. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response_parts\" class=\"method trait-impl\"><a href=\"#method.into_response_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response_parts</a>(\n    self,\n    res: ResponseParts\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ResponseParts, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a> as IntoResponseParts&gt;::Error&gt;</h4></section></summary><div class='docblock'>Set parts of the response</div></details></div></details>","IntoResponseParts","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRequestParts%3CS%3E-for-(T1,+T2,+T3)\" class=\"impl\"><a href=\"#impl-FromRequestParts%3CS%3E-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T1, T2, T3&gt; FromRequestParts&lt;S&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Rejection\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Rejection\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Rejection</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>If the extractor fails it’ll use this “rejection” type. A rejection is\na kind of error that can be converted into a response.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_request_parts\" class=\"method trait-impl\"><a href=\"#method.from_request_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_request_parts</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    parts: &amp;'life0 mut <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Parts.html\" title=\"struct http::request::Parts\">Parts</a>,\n    state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'life1 S</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a> as FromRequestParts&lt;S&gt;&gt;::Rejection&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a>: 'async_trait,</div></h4></section></summary><div class='docblock'>Perform the extraction.</div></details></div></details>","FromRequestParts<S>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponse-for-(T1,+T2,+R)\" class=\"impl\"><a href=\"#impl-IntoResponse-for-(T1,+T2,+R)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R, T1, T2&gt; IntoResponse for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, R)</a><div class=\"where\">where\n    T1: IntoResponseParts,\n    T2: IntoResponseParts,\n    R: IntoResponse,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response\" class=\"method trait-impl\"><a href=\"#method.into_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>Create a response.</div></details></div></details>","IntoResponse","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DeserializeAs%3C'de,+(T0,+T1,+T2)%3E-for-(As0,+As1,+As2)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/de/impls.rs.html#540\">source</a><a href=\"#impl-DeserializeAs%3C'de,+(T0,+T1,+T2)%3E-for-(As0,+As1,+As2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, As0, T1, As1, T2, As2&gt; <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1, T2)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(As0, As1, As2)</a><div class=\"where\">where\n    As0: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, T0&gt;,\n    As1: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, T1&gt;,\n    As2: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, T2&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_as\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/de/impls.rs.html#540\">source</a><a href=\"#method.deserialize_as\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html#tymethod.deserialize_as\" class=\"fn\">deserialize_as</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1, T2)</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer.</div></details></div></details>","DeserializeAs<'de, (T0, T1, T2)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SerializeAs%3C(T0,+T1,+T2)%3E-for-(As0,+As1,+As2)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/ser/impls.rs.html#364\">source</a><a href=\"#impl-SerializeAs%3C(T0,+T1,+T2)%3E-for-(As0,+As1,+As2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, As0, T1, As1, T2, As2&gt; <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1, T2)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(As0, As1, As2)</a><div class=\"where\">where\n    As0: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;T0&gt;,\n    As1: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;T1&gt;,\n    As2: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;T2&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_as\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/ser/impls.rs.html#364\">source</a><a href=\"#method.serialize_as\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html#tymethod.serialize_as\" class=\"fn\">serialize_as</a>&lt;S&gt;(\n    tuple: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1, T2)</a>,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer.</div></details></div></details>","SerializeAs<(T0, T1, T2)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-(A,+B,+C)\" class=\"impl\"><a href=\"#impl-Zeroable-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: Zeroable,\n    B: Zeroable,\n    C: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/nightly/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","cmd::cli::export::TableReference"],["<section id=\"impl-ZeroizeOnDrop-for-(A,+B,+C)\" class=\"impl\"><a href=\"#impl-ZeroizeOnDrop-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; ZeroizeOnDrop for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: ZeroizeOnDrop,\n    B: ZeroizeOnDrop,\n    C: ZeroizeOnDrop,</div></h3></section>","ZeroizeOnDrop","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-(A,+B,+C)\" class=\"impl\"><a href=\"#impl-Zeroize-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; Zeroize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: Zeroize,\n    B: Zeroize,\n    C: Zeroize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OperationInput-for-(T1,+T2,+T3)\" class=\"impl\"><a href=\"#impl-OperationInput-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, T3&gt; OperationInput for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: OperationInput,\n    T2: OperationInput,\n    T3: OperationInput,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.operation_input\" class=\"method trait-impl\"><a href=\"#method.operation_input\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">operation_input</a>(ctx: &amp;mut GenContext, operation: &amp;mut Operation)</h4></section></summary><div class='docblock'>Modify the operation. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inferred_early_responses\" class=\"method trait-impl\"><a href=\"#method.inferred_early_responses\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inferred_early_responses</a>(\n    ctx: &amp;mut GenContext,\n    operation: &amp;mut Operation\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;, Response)&gt;</h4></section></summary><div class='docblock'>Inferred early responses are used to document early returns for\nextractors, guards inside handlers. For example these could represent\nJSON parsing errors, authentication failures. <a>Read more</a></div></details></div></details>","OperationInput","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-JsonSchema-for-(T0,+T1,+T2)\" class=\"impl\"><a href=\"#impl-JsonSchema-for-(T0,+T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2&gt; JsonSchema for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    T0: JsonSchema,\n    T1: JsonSchema,\n    T2: JsonSchema,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_referenceable\" class=\"method trait-impl\"><a href=\"#method.is_referenceable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_referenceable</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether JSON Schemas generated for this type should be re-used where possible using the <code>$ref</code> keyword. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_name\" class=\"method trait-impl\"><a href=\"#method.schema_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>The name of the generated JSON Schema. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_id\" class=\"method trait-impl\"><a href=\"#method.schema_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_id</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns a string that uniquely identifies the schema produced by this type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.json_schema\" class=\"method trait-impl\"><a href=\"#method.json_schema\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">json_schema</a>(gen: &amp;mut SchemaGenerator) -&gt; Schema</h4></section></summary><div class='docblock'>Generates a JSON Schema for this type. <a>Read more</a></div></details></div></details>","JsonSchema","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tuple%3CInput,+(A,+B,+C),+Error%3E-for-(FnA,+FnB,+FnC)\" class=\"impl\"><a href=\"#impl-Tuple%3CInput,+(A,+B,+C),+Error%3E-for-(FnA,+FnB,+FnC)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Input, A, B, C, Error, FnA, FnB, FnC&gt; Tuple&lt;Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FnA, FnB, FnC)</a><div class=\"where\">where\n    Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Error: ParseError&lt;Input&gt;,\n    FnA: Parser&lt;Input, A, Error&gt;,\n    FnB: Parser&lt;Input, B, Error&gt;,\n    FnC: Parser&lt;Input, C, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse</a>(&amp;mut self, input: Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>), Err&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Parses the input and returns a tuple of results of each parser.</div></details></div></details>","Tuple<Input, (A, B, C), Error>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Permutation%3CInput,+(A,+B,+C),+Error%3E-for-(FnA,+FnB,+FnC)\" class=\"impl\"><a href=\"#impl-Permutation%3CInput,+(A,+B,+C),+Error%3E-for-(FnA,+FnB,+FnC)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Input, A, B, C, Error, FnA, FnB, FnC&gt; Permutation&lt;Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FnA, FnB, FnC)</a><div class=\"where\">where\n    Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Error: ParseError&lt;Input&gt;,\n    FnA: Parser&lt;Input, A, Error&gt;,\n    FnB: Parser&lt;Input, B, Error&gt;,\n    FnC: Parser&lt;Input, C, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.permutation\" class=\"method trait-impl\"><a href=\"#method.permutation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">permutation</a>(\n    &amp;mut self,\n    input: Input\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>), Err&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Tries to apply all parsers in the tuple in various orders until all of them succeed</div></details></div></details>","Permutation<Input, (A, B, C), Error>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alt%3CInput,+Output,+Error%3E-for-(A,+B,+C)\" class=\"impl\"><a href=\"#impl-Alt%3CInput,+Output,+Error%3E-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Input, Output, Error, A, B, C&gt; Alt&lt;Input, Output, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Error: ParseError&lt;Input&gt;,\n    A: Parser&lt;Input, Output, Error&gt;,\n    B: Parser&lt;Input, Output, Error&gt;,\n    C: Parser&lt;Input, Output, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.choice\" class=\"method trait-impl\"><a href=\"#method.choice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">choice</a>(&amp;mut self, input: Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Input, Output)</a>, Err&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Tests each parser in the tuple and returns the result of the first one that succeeds</div></details></div></details>","Alt<Input, Output, Error>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRow-for-(T1,+T2,+T3)\" class=\"impl\"><a href=\"#impl-FromRow-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, T3&gt; FromRow for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: FromValue,\n    T2: FromValue,\n    T3: FromValue,\n    &lt;T1 as FromValue&gt;::Intermediate: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Value&gt;,\n    &lt;T2 as FromValue&gt;::Intermediate: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Value&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_row_opt\" class=\"method trait-impl\"><a href=\"#method.from_row_opt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_row_opt</a>(row: Row) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a>, FromRowError&gt;</h4></section><section id=\"method.from_row\" class=\"method trait-impl\"><a href=\"#method.from_row\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_row</a>(row: Row) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></div></details>","FromRow","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Semigroup-for-(A,+B,+C)\" class=\"impl\"><a href=\"#impl-Semigroup-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; Semigroup for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: Semigroup,\n    B: Semigroup,\n    C: Semigroup,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.combine\" class=\"method trait-impl\"><a href=\"#method.combine\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">combine</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a></h4></section></summary><div class='docblock'>Associative operation taking which combines two values. <a>Read more</a></div></details></div></details>","Semigroup","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Monoid-for-(A,+B,+C)\" class=\"impl\"><a href=\"#impl-Monoid-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; Monoid for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: Monoid,\n    B: Monoid,\n    C: Monoid,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method trait-impl\"><a href=\"#method.empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">empty</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a></h4></section></summary><div class='docblock'>For a given Monoid, returns its empty/zero value <a>Read more</a></div></details></div></details>","Monoid","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Generic-for-(T2,+T1,+T0)\" class=\"impl\"><a href=\"#impl-Generic-for-(T2,+T1,+T0)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T2, T1, T0&gt; Generic for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T2, T1, T0)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Repr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Repr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Repr</a> = HCons&lt;T2, HCons&lt;T1, HCons&lt;T0, HNil&gt;&gt;&gt;</h4></section></summary><div class='docblock'>The generic representation type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T2, T1, T0)</a> as Generic&gt;::Repr</h4></section></summary><div class='docblock'>Convert a value to its representation type <code>Repr</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from</a>(r: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T2, T1, T0)</a> as Generic&gt;::Repr) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T2, T1, T0)</a></h4></section></summary><div class='docblock'>Convert a value’s representation type <code>Repr</code> to the value’s type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.convert_from\" class=\"method trait-impl\"><a href=\"#method.convert_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">convert_from</a>&lt;Src&gt;(src: Src) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Src: Generic&lt;Repr = Self::Repr&gt;,</div></h4></section></summary><div class='docblock'>Convert a value to another type provided that they have\nthe same representation type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_repr\" class=\"method trait-impl\"><a href=\"#method.map_repr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">map_repr</a>&lt;Mapper&gt;(self, mapper: Mapper) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Mapper: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Self::Repr) -&gt; Self::Repr,</div></h4></section></summary><div class='docblock'>Maps the given value of type <code>Self</code> by first transforming it to\nthe representation type <code>Repr</code>, then applying a <code>mapper</code> function\non <code>Repr</code> and finally transforming it back to a value of type <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_inter\" class=\"method trait-impl\"><a href=\"#method.map_inter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">map_inter</a>&lt;Inter, Mapper&gt;(self, mapper: Mapper) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Inter: Generic&lt;Repr = Self::Repr&gt;,\n    Mapper: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Inter) -&gt; Inter,</div></h4></section></summary><div class='docblock'>Maps the given value of type <code>Self</code> by first transforming it\na type <code>Inter</code> that has the same representation type as <code>Self</code>,\nthen applying a <code>mapper</code> function on <code>Inter</code> and finally transforming\nit back to a value of type <code>Self</code>.</div></details></div></details>","Generic","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Values-for-(T2,+T1,+T0)\" class=\"impl\"><a href=\"#impl-Values-for-(T2,+T1,+T0)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T2, T1, T0&gt; Values for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T2, T1, T0)</a><div class=\"where\">where\n    T2: Values,\n    T1: Values,\n    T0: Values,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method trait-impl\"><a href=\"#method.encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_len</a>(&amp;self, mode: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the length of the encoded values for the given mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_encoded\" class=\"method trait-impl\"><a href=\"#method.write_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_encoded</a>&lt;W&gt;(&amp;self, mode: Mode, target: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Encodes the values in the given mode and writes them to <code>target</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.explicit\" class=\"method trait-impl\"><a href=\"#method.explicit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">explicit</a>(self, tag: Tag) -&gt; Constructed&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts the encoder into one with an explicit tag.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_captured\" class=\"method trait-impl\"><a href=\"#method.to_captured\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_captured</a>(&amp;self, mode: Mode) -&gt; Captured</h4></section></summary><div class='docblock'>Captures the encoded values in the given mode.</div></details></div></details>","Values","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoParallelIterator-for-(A,+B,+C)\" class=\"impl\"><a href=\"#impl-IntoParallelIterator-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; IntoParallelIterator for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: IntoParallelIterator,\n    &lt;A as IntoParallelIterator&gt;::Iter: IndexedParallelIterator,\n    B: IntoParallelIterator,\n    &lt;B as IntoParallelIterator&gt;::Iter: IndexedParallelIterator,\n    C: IntoParallelIterator,\n    &lt;C as IntoParallelIterator&gt;::Iter: IndexedParallelIterator,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Item</a> = (&lt;A as IntoParallelIterator&gt;::Item, &lt;B as IntoParallelIterator&gt;::Item, &lt;C as IntoParallelIterator&gt;::Item)</h4></section></summary><div class='docblock'>The type of item that the parallel iterator will produce.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Iter</a> = MultiZip&lt;(&lt;A as IntoParallelIterator&gt;::Iter, &lt;B as IntoParallelIterator&gt;::Iter, &lt;C as IntoParallelIterator&gt;::Iter)&gt;</h4></section></summary><div class='docblock'>The parallel iterator type that will be created.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_par_iter\" class=\"method trait-impl\"><a href=\"#method.into_par_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_par_iter</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a> as IntoParallelIterator&gt;::Iter</h4></section></summary><div class='docblock'>Converts <code>self</code> into a parallel iterator. <a>Read more</a></div></details></div></details>","IntoParallelIterator","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(N,+P,+Q,+R,+S,+T,+U,+V),+8,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(N,+P,+Q,+R,+S,+T,+U,+V),+8,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(N, P, Q, R, S, T, U, V)</a>, 8, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(N, P, Q, R, S, T, U, V), 8, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 13, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">13</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(H, J, K, L, M, N, P, Q, R, S, T, U, V), 13, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CH%3E,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CH%3E,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;H&gt;, J, K, L, M, N, P, Q, R, S, T, U, V), 13, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">13</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<H>, J, K, L, M, N, P, Q, R, S, T, U, V), 13, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(P,+Q,+R,+S,+T,+U,+V),+7,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(P,+Q,+R,+S,+T,+U,+V),+7,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(P, Q, R, S, T, U, V)</a>, 7, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">7</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(P, Q, R, S, T, U, V), 7, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CA%3E,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CA%3E,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;A&gt;, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut A</a>, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    A: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<A>, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CJ%3E,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CJ%3E,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;J&gt;, K, L, M, N, P, Q, R, S, T, U, V), 12, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut J</a>, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<J>, K, L, M, N, P, Q, R, S, T, U, V), 12, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CR%3E,+S,+T,+U,+V),+5,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CR%3E,+S,+T,+U,+V),+5,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;R&gt;, S, T, U, V), 5, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">5</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<R>, S, T, U, V), 5, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 16, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(N,+P,+Q,+R,+S,+T,+U,+V),+8,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(N,+P,+Q,+R,+S,+T,+U,+V),+8,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(N, P, Q, R, S, T, U, V)</a>, 8, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(N, P, Q, R, S, T, U, V), 8, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CK%3E,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CK%3E,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;K&gt;, L, M, N, P, Q, R, S, T, U, V), 11, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut K</a>, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">11</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<K>, L, M, N, P, Q, R, S, T, U, V), 11, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CS%3E,+T,+U,+V),+4,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CS%3E,+T,+U,+V),+4,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;S&gt;, T, U, V), 4, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<S>, T, U, V), 4, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(T,+U,+V),+3,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(T,+U,+V),+3,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U, V)</a>, 3, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T, U, V) -&gt; RET + SendSync + 'static,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">3</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(T, U, V), 3, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 15, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">15</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 19, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">19</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 13, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">13</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(H, J, K, L, M, N, P, Q, R, S, T, U, V), 13, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 16, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CV%3E,),+1,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CV%3E,),+1,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;V&gt;,), 1, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<V>,), 1, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CB%3E,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CB%3E,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;B&gt;, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut B</a>, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">19</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<B>, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CL%3E,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CL%3E,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;L&gt;, M, N, P, Q, R, S, T, U, V), 10, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut L</a>, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">10</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<L>, M, N, P, Q, R, S, T, U, V), 10, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 18, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">18</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CH%3E,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CH%3E,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;H&gt;, J, K, L, M, N, P, Q, R, S, T, U, V), 13, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">13</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<H>, J, K, L, M, N, P, Q, R, S, T, U, V), 13, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CG%3E,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CG%3E,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;G&gt;, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut G</a>, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">14</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<G>, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, L, M, N, P, Q, R, S, T, U, V)</a>, 11, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">11</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(K, L, M, N, P, Q, R, S, T, U, V), 11, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CS%3E,+T,+U,+V),+4,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CS%3E,+T,+U,+V),+4,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;S&gt;, T, U, V), 4, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>, T, U, V) -&gt; RET + SendSync + 'static,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<S>, T, U, V), 4, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 17, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">17</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(M,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(M,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, N, P, Q, R, S, T, U, V)</a>, 9, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">9</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(M, N, P, Q, R, S, T, U, V), 9, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CK%3E,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CK%3E,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;K&gt;, L, M, N, P, Q, R, S, T, U, V), 11, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut K</a>, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">11</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<K>, L, M, N, P, Q, R, S, T, U, V), 11, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CB%3E,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CB%3E,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;B&gt;, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut B</a>, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">19</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<B>, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(S,+T,+U,+V),+4,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(S,+T,+U,+V),+4,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T, U, V)</a>, 4, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(S, T, U, V) -&gt; RET + SendSync + 'static,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(S, T, U, V), 4, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CV%3E,),+1,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CV%3E,),+1,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;V&gt;,), 1, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<V>,), 1, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CQ%3E,+R,+S,+T,+U,+V),+6,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CQ%3E,+R,+S,+T,+U,+V),+6,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;Q&gt;, R, S, T, U, V), 6, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Q</a>, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">6</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<Q>, R, S, T, U, V), 6, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CH%3E,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CH%3E,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;H&gt;, J, K, L, M, N, P, Q, R, S, T, U, V), 13, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">13</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<H>, J, K, L, M, N, P, Q, R, S, T, U, V), 13, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, L, M, N, P, Q, R, S, T, U, V)</a>, 11, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">11</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(K, L, M, N, P, Q, R, S, T, U, V), 11, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(R,+S,+T,+U,+V),+5,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(R,+S,+T,+U,+V),+5,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(R, S, T, U, V)</a>, 5, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">5</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(R, S, T, U, V), 5, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CN%3E,+P,+Q,+R,+S,+T,+U,+V),+8,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CN%3E,+P,+Q,+R,+S,+T,+U,+V),+8,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;N&gt;, P, Q, R, S, T, U, V), 8, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut N</a>, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<N>, P, Q, R, S, T, U, V), 8, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CM%3E,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CM%3E,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;M&gt;, N, P, Q, R, S, T, U, V), 9, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut M</a>, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">9</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<M>, N, P, Q, R, S, T, U, V), 9, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 15, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">15</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L, M, N, P, Q, R, S, T, U, V)</a>, 10, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">10</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(L, M, N, P, Q, R, S, T, U, V), 10, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 19, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">19</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(T,+U,+V),+3,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(T,+U,+V),+3,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U, V)</a>, 3, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, T, U, V) -&gt; RET + SendSync + 'static,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">3</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(T, U, V), 3, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 19, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">19</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CQ%3E,+R,+S,+T,+U,+V),+6,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CQ%3E,+R,+S,+T,+U,+V),+6,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;Q&gt;, R, S, T, U, V), 6, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Q</a>, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">6</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<Q>, R, S, T, U, V), 6, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CD%3E,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CD%3E,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;D&gt;, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">17</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<D>, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CM%3E,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CM%3E,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;M&gt;, N, P, Q, R, S, T, U, V), 9, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut M</a>, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">9</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<M>, N, P, Q, R, S, T, U, V), 9, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CB%3E,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CB%3E,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;B&gt;, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut B</a>, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">19</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<B>, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CP%3E,+Q,+R,+S,+T,+U,+V),+7,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CP%3E,+Q,+R,+S,+T,+U,+V),+7,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;P&gt;, Q, R, S, T, U, V), 7, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut P</a>, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">7</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<P>, Q, R, S, T, U, V), 7, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CM%3E,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CM%3E,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;M&gt;, N, P, Q, R, S, T, U, V), 9, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut M</a>, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">9</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<M>, N, P, Q, R, S, T, U, V), 9, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 14, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">14</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CR%3E,+S,+T,+U,+V),+5,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CR%3E,+S,+T,+U,+V),+5,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;R&gt;, S, T, U, V), 5, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">5</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<R>, S, T, U, V), 5, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Q,+R,+S,+T,+U,+V),+6,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Q,+R,+S,+T,+U,+V),+6,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Q, R, S, T, U, V)</a>, 6, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">6</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Q, R, S, T, U, V), 6, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CJ%3E,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CJ%3E,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;J&gt;, K, L, M, N, P, Q, R, S, T, U, V), 12, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut J</a>, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<J>, K, L, M, N, P, Q, R, S, T, U, V), 12, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CB%3E,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CB%3E,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;B&gt;, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut B</a>, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">19</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<B>, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(P,+Q,+R,+S,+T,+U,+V),+7,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(P,+Q,+R,+S,+T,+U,+V),+7,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(P, Q, R, S, T, U, V)</a>, 7, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">7</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(P, Q, R, S, T, U, V), 7, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(V,),+1,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(V,),+1,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(V,)</a>, 1, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, V) -&gt; RET + SendSync + 'static,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(V,), 1, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CJ%3E,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CJ%3E,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;J&gt;, K, L, M, N, P, Q, R, S, T, U, V), 12, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut J</a>, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<J>, K, L, M, N, P, Q, R, S, T, U, V), 12, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CS%3E,+T,+U,+V),+4,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CS%3E,+T,+U,+V),+4,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;S&gt;, T, U, V), 4, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<S>, T, U, V), 4, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CU%3E,+V),+2,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CU%3E,+V),+2,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;U&gt;, V), 2, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut U</a>, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<U>, V), 2, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(P,+Q,+R,+S,+T,+U,+V),+7,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(P,+Q,+R,+S,+T,+U,+V),+7,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(P, Q, R, S, T, U, V)</a>, 7, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">7</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(P, Q, R, S, T, U, V), 7, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 12, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(J, K, L, M, N, P, Q, R, S, T, U, V), 12, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L, M, N, P, Q, R, S, T, U, V)</a>, 10, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">10</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(L, M, N, P, Q, R, S, T, U, V), 10, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CU%3E,+V),+2,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CU%3E,+V),+2,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;U&gt;, V), 2, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut U</a>, V) -&gt; RET + SendSync + 'static,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<U>, V), 2, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CP%3E,+Q,+R,+S,+T,+U,+V),+7,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CP%3E,+Q,+R,+S,+T,+U,+V),+7,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;P&gt;, Q, R, S, T, U, V), 7, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut P</a>, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">7</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<P>, Q, R, S, T, U, V), 7, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(M,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(M,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, N, P, Q, R, S, T, U, V)</a>, 9, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">9</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(M, N, P, Q, R, S, T, U, V), 9, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(V,),+1,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(V,),+1,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(V,)</a>, 1, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(V) -&gt; RET + SendSync + 'static,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(V,), 1, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(M,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(M,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, N, P, Q, R, S, T, U, V)</a>, 9, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">9</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(M, N, P, Q, R, S, T, U, V), 9, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 14, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">14</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 12, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(J, K, L, M, N, P, Q, R, S, T, U, V), 12, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CD%3E,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CD%3E,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;D&gt;, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">17</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<D>, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L, M, N, P, Q, R, S, T, U, V)</a>, 10, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">10</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(L, M, N, P, Q, R, S, T, U, V), 10, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CR%3E,+S,+T,+U,+V),+5,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CR%3E,+S,+T,+U,+V),+5,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;R&gt;, S, T, U, V), 5, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>, S, T, U, V) -&gt; RET + SendSync + 'static,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">5</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<R>, S, T, U, V), 5, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 16, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(N,+P,+Q,+R,+S,+T,+U,+V),+8,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(N,+P,+Q,+R,+S,+T,+U,+V),+8,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(N, P, Q, R, S, T, U, V)</a>, 8, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(N, P, Q, R, S, T, U, V), 8, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CD%3E,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CD%3E,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;D&gt;, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">17</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<D>, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CP%3E,+Q,+R,+S,+T,+U,+V),+7,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CP%3E,+Q,+R,+S,+T,+U,+V),+7,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;P&gt;, Q, R, S, T, U, V), 7, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut P</a>, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">7</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<P>, Q, R, S, T, U, V), 7, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 14, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">14</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CA%3E,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CA%3E,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;A&gt;, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut A</a>, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    A: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<A>, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CG%3E,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CG%3E,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;G&gt;, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut G</a>, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">14</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<G>, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CC%3E,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CC%3E,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;C&gt;, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut C</a>, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">18</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<C>, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(S,+T,+U,+V),+4,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(S,+T,+U,+V),+4,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T, U, V)</a>, 4, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, S, T, U, V) -&gt; RET + SendSync + 'static,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(S, T, U, V), 4, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CJ%3E,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CJ%3E,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;J&gt;, K, L, M, N, P, Q, R, S, T, U, V), 12, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut J</a>, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<J>, K, L, M, N, P, Q, R, S, T, U, V), 12, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Q,+R,+S,+T,+U,+V),+6,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Q,+R,+S,+T,+U,+V),+6,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Q, R, S, T, U, V)</a>, 6, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">6</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Q, R, S, T, U, V), 6, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(U,+V),+2,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(U,+V),+2,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(U, V)</a>, 2, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, U, V) -&gt; RET + SendSync + 'static,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(U, V), 2, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(A,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(A,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 20, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    A: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+19,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 19, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">19</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 19, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(U,+V),+2,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(U,+V),+2,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(U, V)</a>, 2, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(U, V) -&gt; RET + SendSync + 'static,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(U, V), 2, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CK%3E,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CK%3E,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;K&gt;, L, M, N, P, Q, R, S, T, U, V), 11, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut K</a>, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">11</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<K>, L, M, N, P, Q, R, S, T, U, V), 11, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CT%3E,+U,+V),+3,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CT%3E,+U,+V),+3,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;T&gt;, U, V), 3, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">3</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<T>, U, V), 3, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(S,+T,+U,+V),+4,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(S,+T,+U,+V),+4,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T, U, V)</a>, 4, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(S, T, U, V), 4, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(N,+P,+Q,+R,+S,+T,+U,+V),+8,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(N,+P,+Q,+R,+S,+T,+U,+V),+8,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(N, P, Q, R, S, T, U, V)</a>, 8, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(N, P, Q, R, S, T, U, V), 8, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 18, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">18</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CE%3E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CE%3E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;E&gt;, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<E>, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CP%3E,+Q,+R,+S,+T,+U,+V),+7,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CP%3E,+Q,+R,+S,+T,+U,+V),+7,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;P&gt;, Q, R, S, T, U, V), 7, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut P</a>, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">7</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<P>, Q, R, S, T, U, V), 7, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CL%3E,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CL%3E,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;L&gt;, M, N, P, Q, R, S, T, U, V), 10, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut L</a>, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">10</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<L>, M, N, P, Q, R, S, T, U, V), 10, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CQ%3E,+R,+S,+T,+U,+V),+6,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CQ%3E,+R,+S,+T,+U,+V),+6,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;Q&gt;, R, S, T, U, V), 6, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Q</a>, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">6</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<Q>, R, S, T, U, V), 6, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 17, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">17</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 13, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">13</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(H, J, K, L, M, N, P, Q, R, S, T, U, V), 13, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CL%3E,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CL%3E,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;L&gt;, M, N, P, Q, R, S, T, U, V), 10, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut L</a>, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">10</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<L>, M, N, P, Q, R, S, T, U, V), 10, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(R,+S,+T,+U,+V),+5,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(R,+S,+T,+U,+V),+5,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(R, S, T, U, V)</a>, 5, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">5</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(R, S, T, U, V), 5, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CM%3E,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CM%3E,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;M&gt;, N, P, Q, R, S, T, U, V), 9, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut M</a>, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">9</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<M>, N, P, Q, R, S, T, U, V), 9, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CF%3E,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CF%3E,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;F&gt;, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">15</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<F>, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(T,+U,+V),+3,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(T,+U,+V),+3,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U, V)</a>, 3, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">3</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(T, U, V), 3, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CR%3E,+S,+T,+U,+V),+5,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CR%3E,+S,+T,+U,+V),+5,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;R&gt;, S, T, U, V), 5, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut R</a>, S, T, U, V) -&gt; RET + SendSync + 'static,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">5</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<R>, S, T, U, V), 5, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 15, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">15</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CD%3E,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CD%3E,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;D&gt;, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">17</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<D>, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, L, M, N, P, Q, R, S, T, U, V)</a>, 11, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">11</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(K, L, M, N, P, Q, R, S, T, U, V), 11, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CT%3E,+U,+V),+3,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CT%3E,+U,+V),+3,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;T&gt;, U, V), 3, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>, U, V) -&gt; RET + SendSync + 'static,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">3</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<T>, U, V), 3, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CU%3E,+V),+2,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CU%3E,+V),+2,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;U&gt;, V), 2, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut U</a>, V) -&gt; RET + SendSync + 'static,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<U>, V), 2, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CV%3E,),+1,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CV%3E,),+1,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;V&gt;,), 1, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; RET + SendSync + 'static,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<V>,), 1, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CT%3E,+U,+V),+3,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CT%3E,+U,+V),+3,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;T&gt;, U, V), 3, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">3</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<T>, U, V), 3, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CQ%3E,+R,+S,+T,+U,+V),+6,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CQ%3E,+R,+S,+T,+U,+V),+6,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;Q&gt;, R, S, T, U, V), 6, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Q</a>, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">6</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<Q>, R, S, T, U, V), 6, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(V,),+1,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(V,),+1,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(V,)</a>, 1, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(V,), 1, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(R,+S,+T,+U,+V),+5,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(R,+S,+T,+U,+V),+5,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(R, S, T, U, V)</a>, 5, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">5</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(R, S, T, U, V), 5, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 15, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">15</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CE%3E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CE%3E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;E&gt;, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<E>, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(U,+V),+2,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(U,+V),+2,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(U, V)</a>, 2, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(U, V), 2, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CS%3E,+T,+U,+V),+4,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CS%3E,+T,+U,+V),+4,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;S&gt;, T, U, V), 4, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut S</a>, T, U, V) -&gt; RET + SendSync + 'static,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<S>, T, U, V), 4, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Q,+R,+S,+T,+U,+V),+6,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Q,+R,+S,+T,+U,+V),+6,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Q, R, S, T, U, V)</a>, 6, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">6</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Q, R, S, T, U, V), 6, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CF%3E,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CF%3E,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;F&gt;, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">15</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<F>, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(U,+V),+2,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(U,+V),+2,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(U, V)</a>, 2, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(U, V), 2, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 12, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(J, K, L, M, N, P, Q, R, S, T, U, V), 12, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CC%3E,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CC%3E,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;C&gt;, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut C</a>, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">18</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<C>, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(K, L, M, N, P, Q, R, S, T, U, V)</a>, 11, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">11</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(K, L, M, N, P, Q, R, S, T, U, V), 11, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CK%3E,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CK%3E,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+11,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;K&gt;, L, M, N, P, Q, R, S, T, U, V), 11, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut K</a>, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">11</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<K>, L, M, N, P, Q, R, S, T, U, V), 11, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CV%3E,),+1,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CV%3E,),+1,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;V&gt;,), 1, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>) -&gt; RET + SendSync + 'static,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<V>,), 1, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(V,),+1,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(V,),+1,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(V,)</a>, 1, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(V,), 1, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CE%3E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CE%3E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;E&gt;, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<E>, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CU%3E,+V),+2,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CU%3E,+V),+2,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;U&gt;, V), 2, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut U</a>, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">2</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<U>, V), 2, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 18, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">18</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CE%3E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CE%3E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;E&gt;, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<E>, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(A,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(A,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 20, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    A: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CN%3E,+P,+Q,+R,+S,+T,+U,+V),+8,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CN%3E,+P,+Q,+R,+S,+T,+U,+V),+8,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;N&gt;, P, Q, R, S, T, U, V), 8, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut N</a>, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<N>, P, Q, R, S, T, U, V), 8, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CC%3E,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CC%3E,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;C&gt;, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut C</a>, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">18</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<C>, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(M,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(M,+N,+P,+Q,+R,+S,+T,+U,+V),+9,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, N, P, Q, R, S, T, U, V)</a>, 9, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">9</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(M, N, P, Q, R, S, T, U, V), 9, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+16,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 16, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 16, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CH%3E,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CH%3E,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;H&gt;, J, K, L, M, N, P, Q, R, S, T, U, V), 13, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">13</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<H>, J, K, L, M, N, P, Q, R, S, T, U, V), 13, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+12,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 12, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">12</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(J, K, L, M, N, P, Q, R, S, T, U, V), 12, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 18, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">18</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CL%3E,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CL%3E,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;L&gt;, M, N, P, Q, R, S, T, U, V), 10, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut L</a>, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">10</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<L>, M, N, P, Q, R, S, T, U, V), 10, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(S,+T,+U,+V),+4,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(S,+T,+U,+V),+4,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T, U, V)</a>, 4, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(S, T, U, V), 4, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(R,+S,+T,+U,+V),+5,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(R,+S,+T,+U,+V),+5,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(R, S, T, U, V)</a>, 5, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">5</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(R, S, T, U, V), 5, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CC%3E,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CC%3E,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+18,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;C&gt;, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut C</a>, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">18</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<C>, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 18, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CA%3E,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CA%3E,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;A&gt;, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut A</a>, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    A: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<A>, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CF%3E,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CF%3E,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;F&gt;, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">15</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<F>, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CN%3E,+P,+Q,+R,+S,+T,+U,+V),+8,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CN%3E,+P,+Q,+R,+S,+T,+U,+V),+8,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;N&gt;, P, Q, R, S, T, U, V), 8, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut N</a>, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<N>, P, Q, R, S, T, U, V), 8, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 17, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">17</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CF%3E,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CF%3E,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+15,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;F&gt;, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">15</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<F>, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 15, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(A,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(A,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 20, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    A: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CG%3E,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+false,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CG%3E,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+false,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;G&gt;, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, false, RET, true&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut G</a>, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">14</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<G>, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, false, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CA%3E,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CA%3E,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;A&gt;, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut A</a>, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    A: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<A>, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+17,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 17, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">17</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 17, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Q,+R,+S,+T,+U,+V),+6,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Q,+R,+S,+T,+U,+V),+6,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Q, R, S, T, U, V)</a>, 6, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">6</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Q, R, S, T, U, V), 6, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+10,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L, M, N, P, Q, R, S, T, U, V)</a>, 10, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">10</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(L, M, N, P, Q, R, S, T, U, V), 10, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CT%3E,+U,+V),+3,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CT%3E,+U,+V),+3,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;T&gt;, U, V), 3, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>, U, V) -&gt; RET + SendSync + 'static,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">3</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<T>, U, V), 3, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(P,+Q,+R,+S,+T,+U,+V),+7,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(P,+Q,+R,+S,+T,+U,+V),+7,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(P, Q, R, S, T, U, V)</a>, 7, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">7</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(P, Q, R, S, T, U, V), 7, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(T,+U,+V),+3,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(T,+U,+V),+3,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U, V)</a>, 3, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">3</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(T, U, V), 3, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CG%3E,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CG%3E,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;G&gt;, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut G</a>, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">14</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<G>, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+false,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+13,+false,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 13, false, RET, false&gt; for FN<div class=\"where\">where\n    FN: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">13</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(H, J, K, L, M, N, P, Q, R, S, T, U, V), 13, false, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(A,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(A,+B,+C,+D,+E,+F,+G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+20,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 20, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    A: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    B: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    C: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    D: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    E: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">20</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(A, B, C, D, E, F, G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 20, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(Mut%3CN%3E,+P,+Q,+R,+S,+T,+U,+V),+8,+true,+RET,+false%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(Mut%3CN%3E,+P,+Q,+R,+S,+T,+U,+V),+8,+true,+RET,+false%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;(Mut&lt;N&gt;, P, Q, R, S, T, U, V), 8, true, RET, false&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut N</a>, P, Q, R, S, T, U, V) -&gt; RET + SendSync + 'static,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(Mut<N>, P, Q, R, S, T, U, V), 8, true, RET, false>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterNativeFunction%3C(G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+true,+RET,+true%3E-for-FN\" class=\"impl\"><a href=\"#impl-RegisterNativeFunction%3C(G,+H,+J,+K,+L,+M,+N,+P,+Q,+R,+S,+T,+U,+V),+14,+true,+RET,+true%3E-for-FN\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FN, G, H, J, K, L, M, N, P, Q, R, S, T, U, V, RET&gt; RegisterNativeFunction&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(G, H, J, K, L, M, N, P, Q, R, S, T, U, V)</a>, 14, true, RET, true&gt; for FN<div class=\"where\">where\n    FN: for&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(NativeCallContext&lt;'a&gt;, G, H, J, K, L, M, N, P, Q, R, S, T, U, V) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;RET, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;EvalAltResult&gt;&gt; + SendSync + 'static,\n    G: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    H: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    J: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    K: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    M: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    N: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    P: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Q: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    R: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    RET: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_types\" class=\"method trait-impl\"><a href=\"#method.param_types\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_types</a>() -&gt; [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">14</a>]</h4></section></summary><div class='docblock'>Get the type ID’s of this function’s parameters.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_callable_function\" class=\"method trait-impl\"><a href=\"#method.into_callable_function\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_callable_function</a>(\n    self,\n    fn_name: SmartString&lt;LazyCompact&gt;,\n    is_pure: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>\n) -&gt; CallableFunction</h4></section></summary><div class='docblock'>Convert this function into a [<code>CallableFunction</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_params\" class=\"method trait-impl\"><a href=\"#method.num_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">num_params</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Get the number of parameters for this function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_context\" class=\"method trait-impl\"><a href=\"#method.has_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">has_context</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is there a [<code>NativeCallContext</code>] parameter for this function?</div></details></div></details>","RegisterNativeFunction<(G, H, J, K, L, M, N, P, Q, R, S, T, U, V), 14, true, RET, true>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FuncArgs-for-(T,+U,+V)\" class=\"impl\"><a href=\"#impl-FuncArgs-for-(T,+U,+V)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, V&gt; FuncArgs for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, U, V)</a><div class=\"where\">where\n    T: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: Variant + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse</a>&lt;ARGS&gt;(self, args: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut ARGS</a>)<div class=\"where\">where\n    ARGS: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Dynamic&gt;,</div></h4></section></summary><div class='docblock'>Parse function call arguments into a container. <a>Read more</a></div></details></div></details>","FuncArgs","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parser%3CI,+(O1,+O2,+O3),+E%3E-for-(P1,+P2,+P3)\" class=\"impl\"><a href=\"#impl-Parser%3CI,+(O1,+O2,+O3),+E%3E-for-(P1,+P2,+P3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, O1, O2, O3, E, P1, P2, P3&gt; Parser&lt;I, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(O1, O2, O3)</a>, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(P1, P2, P3)</a><div class=\"where\">where\n    E: ParserError&lt;I&gt;,\n    P1: Parser&lt;I, O1, E&gt;,\n    P2: Parser&lt;I, O2, E&gt;,\n    P3: Parser&lt;I, O3, E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_next\" class=\"method trait-impl\"><a href=\"#method.parse_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_next</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(O1, O2, O3)</a>, ErrMode&lt;E&gt;&gt;</h4></section></summary><div class='docblock'>Take tokens from the [<code>Stream</code>], turning it into the output <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_peek\" class=\"method trait-impl\"><a href=\"#method.parse_peek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_peek</a>(&amp;mut self, input: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(I, O)</a>, ErrMode&lt;E&gt;&gt;</h4></section></summary><div class='docblock'>Take tokens from the [<code>Stream</code>], turning it into the output <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">by_ref</a>(&amp;mut self) -&gt; ByRef&lt;'_, Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Treat <code>&amp;mut Self</code> as a parser <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method trait-impl\"><a href=\"#method.value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">value</a>&lt;O2&gt;(self, val: O2) -&gt; Value&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    O2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Produce the provided value <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_value\" class=\"method trait-impl\"><a href=\"#method.default_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default_value</a>&lt;O2&gt;(self) -&gt; DefaultValue&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    O2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Produce a type’s default value <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.void\" class=\"method trait-impl\"><a href=\"#method.void\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">void</a>(self) -&gt; Void&lt;Self, I, O, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Discards the output of the <code>Parser</code> <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.output_into\" class=\"method trait-impl\"><a href=\"#method.output_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">output_into</a>&lt;O2&gt;(self) -&gt; OutputInto&lt;Self, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;O2&gt;,</div></h4></section></summary><div class='docblock'>Convert the parser’s output to another type using <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>std::convert::From</code></a> <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">map</a>&lt;G, O2&gt;(self, map: G) -&gt; Map&lt;Self, G, I, O, O2, E&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O) -&gt; O2,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps a function over the output of a parser <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">flat_map</a>&lt;G, H, O2&gt;(self, map: G) -&gt; FlatMap&lt;Self, G, H, I, O, O2, E&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O) -&gt; H,\n    H: Parser&lt;I, O2, E&gt;,</div></h4></section></summary><div class='docblock'>Creates a parser from the output of this one <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complete_err\" class=\"method trait-impl\"><a href=\"#method.complete_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">complete_err</a>(self) -&gt; CompleteErr&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms [<code>Incomplete</code>][crate::error::ErrMode::Incomplete] into [<code>Backtrack</code>][crate::error::ErrMode::Backtrack] <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.err_into\" class=\"method trait-impl\"><a href=\"#method.err_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">err_into</a>&lt;E2&gt;(self) -&gt; ErrInto&lt;Self, I, O, E, E2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;E2&gt;,</div></h4></section></summary><div class='docblock'>Convert the parser’s error to another type using <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>std::convert::From</code></a></div></details></div></details>","Parser<I, (O1, O2, O3), E>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Permutation%3CI,+(O1,+O2,+O3),+Error%3E-for-(P1,+P2,+P3)\" class=\"impl\"><a href=\"#impl-Permutation%3CI,+(O1,+O2,+O3),+Error%3E-for-(P1,+P2,+P3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, O1, O2, O3, Error, P1, P2, P3&gt; Permutation&lt;I, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(O1, O2, O3)</a>, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(P1, P2, P3)</a><div class=\"where\">where\n    I: Stream,\n    Error: ParserError&lt;I&gt;,\n    P1: Parser&lt;I, O1, Error&gt;,\n    P2: Parser&lt;I, O2, Error&gt;,\n    P3: Parser&lt;I, O3, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.permutation\" class=\"method trait-impl\"><a href=\"#method.permutation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">permutation</a>(&amp;mut self, input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(O1, O2, O3)</a>, ErrMode&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Tries to apply all parsers in the tuple in various orders until all of them succeed</div></details></div></details>","Permutation<I, (O1, O2, O3), Error>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alt%3CI,+Output,+Error%3E-for-(Alt2,+Alt3,+Alt4)\" class=\"impl\"><a href=\"#impl-Alt%3CI,+Output,+Error%3E-for-(Alt2,+Alt3,+Alt4)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I, Output, Error, Alt2, Alt3, Alt4&gt; Alt&lt;I, Output, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Alt2, Alt3, Alt4)</a><div class=\"where\">where\n    I: Stream,\n    Error: ParserError&lt;I&gt;,\n    Alt2: Parser&lt;I, Output, Error&gt;,\n    Alt3: Parser&lt;I, Output, Error&gt;,\n    Alt4: Parser&lt;I, Output, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.choice\" class=\"method trait-impl\"><a href=\"#method.choice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">choice</a>(&amp;mut self, input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Output, ErrMode&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Tests each parser in the tuple and returns the result of the first one that succeeds</div></details></div></details>","Alt<I, Output, Error>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContainsToken%3CT%3E-for-(F1,+F2,+F3)\" class=\"impl\"><a href=\"#impl-ContainsToken%3CT%3E-for-(F1,+F2,+F3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F1, F2, F3&gt; ContainsToken&lt;T&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(F1, F2, F3)</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    F1: ContainsToken&lt;T&gt;,\n    F2: ContainsToken&lt;T&gt;,\n    F3: ContainsToken&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_token\" class=\"method trait-impl\"><a href=\"#method.contains_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">contains_token</a>(&amp;self, token: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if self contains the token</div></details></div></details>","ContainsToken<T>","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoFuncArgs-for-(T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/function/argument.rs.html#53\">source</a><a href=\"#impl-IntoFuncArgs-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, T3&gt; <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/trait.IntoFuncArgs.html\" title=\"trait rustpython_vm::function::argument::IntoFuncArgs\">IntoFuncArgs</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/convert/to_pyobject/trait.ToPyObject.html\" title=\"trait rustpython_vm::convert::to_pyobject::ToPyObject\">ToPyObject</a>,\n    T2: <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/convert/to_pyobject/trait.ToPyObject.html\" title=\"trait rustpython_vm::convert::to_pyobject::ToPyObject\">ToPyObject</a>,\n    T3: <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/convert/to_pyobject/trait.ToPyObject.html\" title=\"trait rustpython_vm::convert::to_pyobject::ToPyObject\">ToPyObject</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_args\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/function/argument.rs.html#53\">source</a><a href=\"#method.into_args\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/trait.IntoFuncArgs.html#tymethod.into_args\" class=\"fn\">into_args</a>(self, vm: &amp;<a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/vm/struct.VirtualMachine.html\" title=\"struct rustpython_vm::vm::VirtualMachine\">VirtualMachine</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/struct.FuncArgs.html\" title=\"struct rustpython_vm::function::argument::FuncArgs\">FuncArgs</a></h4></section><section id=\"method.into_method_args\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/function/argument.rs.html#53\">source</a><a href=\"#method.into_method_args\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/trait.IntoFuncArgs.html#method.into_method_args\" class=\"fn\">into_method_args</a>(self, obj: <a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/object/core/struct.PyObjectRef.html\" title=\"struct rustpython_vm::object::core::PyObjectRef\">PyObjectRef</a>, vm: &amp;<a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/vm/struct.VirtualMachine.html\" title=\"struct rustpython_vm::vm::VirtualMachine\">VirtualMachine</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/struct.FuncArgs.html\" title=\"struct rustpython_vm::function::argument::FuncArgs\">FuncArgs</a></h4></section></div></details>","IntoFuncArgs","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromArgs-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/function/argument.rs.html#581\">source</a><a href=\"#impl-FromArgs-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/trait.FromArgs.html\" title=\"trait rustpython_vm::function::argument::FromArgs\">FromArgs</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/trait.FromArgs.html\" title=\"trait rustpython_vm::function::argument::FromArgs\">FromArgs</a>,\n    B: <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/trait.FromArgs.html\" title=\"trait rustpython_vm::function::argument::FromArgs\">FromArgs</a>,\n    C: <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/trait.FromArgs.html\" title=\"trait rustpython_vm::function::argument::FromArgs\">FromArgs</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/function/argument.rs.html#581\">source</a><a href=\"#method.arity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/trait.FromArgs.html#method.arity\" class=\"fn\">arity</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>The range of positional arguments permitted by the function signature. <a href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/trait.FromArgs.html#method.arity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_args\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/function/argument.rs.html#581\">source</a><a href=\"#method.from_args\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/trait.FromArgs.html#tymethod.from_args\" class=\"fn\">from_args</a>(\n    vm: &amp;<a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/vm/struct.VirtualMachine.html\" title=\"struct rustpython_vm::vm::VirtualMachine\">VirtualMachine</a>,\n    args: &amp;mut <a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/struct.FuncArgs.html\" title=\"struct rustpython_vm::function::argument::FuncArgs\">FuncArgs</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>, <a class=\"enum\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/enum.ArgumentError.html\" title=\"enum rustpython_vm::function::argument::ArgumentError\">ArgumentError</a>&gt;</h4></section></summary><div class='docblock'>Extracts this item from the next argument(s).</div></details></div></details>","FromArgs","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPyObject-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/builtins/tuple.rs.html#77\">source</a><a href=\"#impl-ToPyObject-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/convert/to_pyobject/trait.ToPyObject.html\" title=\"trait rustpython_vm::convert::to_pyobject::ToPyObject\">ToPyObject</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/convert/to_pyobject/trait.ToPyObject.html\" title=\"trait rustpython_vm::convert::to_pyobject::ToPyObject\">ToPyObject</a>,\n    B: <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/convert/to_pyobject/trait.ToPyObject.html\" title=\"trait rustpython_vm::convert::to_pyobject::ToPyObject\">ToPyObject</a>,\n    C: <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/convert/to_pyobject/trait.ToPyObject.html\" title=\"trait rustpython_vm::convert::to_pyobject::ToPyObject\">ToPyObject</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_pyobject\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/builtins/tuple.rs.html#77\">source</a><a href=\"#method.to_pyobject\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustpython-vm/rustpython_vm/convert/to_pyobject/trait.ToPyObject.html#tymethod.to_pyobject\" class=\"fn\">to_pyobject</a>(self, vm: &amp;<a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/vm/struct.VirtualMachine.html\" title=\"struct rustpython_vm::vm::VirtualMachine\">VirtualMachine</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/object/core/struct.PyObjectRef.html\" title=\"struct rustpython_vm::object::core::PyObjectRef\">PyObjectRef</a></h4></section></div></details>","ToPyObject","cmd::cli::export::TableReference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoPyNativeFunc%3C(T,+R,+VM)%3E-for-F\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/function/builtin.rs.html#42-44\">source</a><a href=\"#impl-IntoPyNativeFunc%3C(T,+R,+VM)%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, T, R, VM&gt; <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/builtin/trait.IntoPyNativeFunc.html\" title=\"trait rustpython_vm::function::builtin::IntoPyNativeFunc\">IntoPyNativeFunc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, R, VM)</a>&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/builtin/sealed/trait.PyNativeFuncInternal.html\" title=\"trait rustpython_vm::function::builtin::sealed::PyNativeFuncInternal\">PyNativeFuncInternal</a>&lt;T, R, VM&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/function/builtin.rs.html#47\">source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/builtin/trait.IntoPyNativeFunc.html#tymethod.call\" class=\"fn\">call</a>(\n    &amp;self,\n    vm: &amp;<a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/vm/struct.VirtualMachine.html\" title=\"struct rustpython_vm::vm::VirtualMachine\">VirtualMachine</a>,\n    args: <a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/struct.FuncArgs.html\" title=\"struct rustpython_vm::function::argument::FuncArgs\">FuncArgs</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/object/core/struct.PyObjectRef.html\" title=\"struct rustpython_vm::object::core::PyObjectRef\">PyObjectRef</a>, <a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/object/core/struct.PyRef.html\" title=\"struct rustpython_vm::object::core::PyRef\">PyRef</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/exceptions/types/struct.PyBaseException.html\" title=\"struct rustpython_vm::exceptions::types::PyBaseException\">PyBaseException</a>&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_func\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/rustpython-vm/src/rustpython_vm/function/builtin.rs.html#35\">source</a><a href=\"#method.into_func\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/builtin/trait.IntoPyNativeFunc.html#method.into_func\" class=\"fn\">into_func</a>(\n    self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;<a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/vm/struct.VirtualMachine.html\" title=\"struct rustpython_vm::vm::VirtualMachine\">VirtualMachine</a>, <a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/function/argument/struct.FuncArgs.html\" title=\"struct rustpython_vm::function::argument::FuncArgs\">FuncArgs</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/object/core/struct.PyObjectRef.html\" title=\"struct rustpython_vm::object::core::PyObjectRef\">PyObjectRef</a>, <a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/object/core/struct.PyRef.html\" title=\"struct rustpython_vm::object::core::PyRef\">PyRef</a>&lt;<a class=\"struct\" href=\"https://docs.rs/rustpython-vm/rustpython_vm/exceptions/types/struct.PyBaseException.html\" title=\"struct rustpython_vm::exceptions::types::PyBaseException\">PyBaseException</a>&gt;&gt;&gt;</h4></section></summary><div class='docblock'><code>IntoPyNativeFunc::into_func()</code> generates a PyNativeFunc that performs the\nappropriate type and arity checking, any requested conversions, and then if\nsuccessful calls the function with the extracted parameters.</div></details></div></details>","IntoPyNativeFunc<(T, R, VM)>","cmd::cli::export::TableReference"]],
"common_meta":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, Res, S, B&gt; Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    Res: IntoResponse,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    _req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    _state: S\n) -&gt; &lt;F as Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<((),), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T16: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7), S, B>","common_meta::heartbeat::mailbox::IncomingMessage","common_meta::heartbeat::mailbox::OutgoingMessage"]],
"common_procedure":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, Res, S, B&gt; Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    Res: IntoResponse,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    _req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    _state: S\n) -&gt; &lt;F as Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<((),), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T16: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), S, B>","common_procedure::store::state_store::KeyValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7), S, B>","common_procedure::store::state_store::KeyValue"]],
"meta_client":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#398-401\">source</a></span><a href=\"#impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, ExtendA, ExtendB&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(ExtendA, ExtendB)</a><div class=\"where\">where\n    ExtendA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    ExtendB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#423\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, into_iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows to <code>extend</code> a tuple of collections that also implement <code>Extend</code>.</p>\n<p>See also: <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" title=\"method core::iter::traits::iterator::Iterator::unzip\"><code>Iterator::unzip</code></a></p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]);\ntuple.extend([(<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>), (<span class=\"number\">6</span>, <span class=\"number\">7</span>)]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">0</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">1</span>, [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);\n\n<span class=\"comment\">// also allows for arbitrarily nested tuples as elements\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>nested_tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], (<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>]));\nnested_tuple.extend([(<span class=\"number\">4</span>, (<span class=\"number\">5</span>, <span class=\"number\">6</span>)), (<span class=\"number\">7</span>, (<span class=\"number\">8</span>, <span class=\"number\">9</span>))]);\n\n<span class=\"kw\">let </span>(a, (b, c)) = nested_tuple;\n<span class=\"macro\">assert_eq!</span>(a, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>]);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]);\n<span class=\"macro\">assert_eq!</span>(c, [<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#446\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#451\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(A, B)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/tuple.rs.html#360\">source</a></span><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/tuple.rs.html#360\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/ser/impls.rs.html#406-423\">source</a><a href=\"#impl-Serialize-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/ser/impls.rs.html#406-423\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/impls.rs.html#1366-1383\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/impls.rs.html#1366-1383\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-(S,+T)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#impl-Bounded-for-(S,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T)</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T)</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T)</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWeightedEdge%3CE%3E-for-(Ix,+Ix)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/lib.rs.html#255-257\">source</a><a href=\"#impl-IntoWeightedEdge%3CE%3E-for-(Ix,+Ix)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ix, E&gt; <a class=\"trait\" href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html\" title=\"trait petgraph::IntoWeightedEdge\">IntoWeightedEdge</a>&lt;E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ix, Ix)</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.NodeId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NodeId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html#associatedtype.NodeId\" class=\"associatedtype\">NodeId</a> = Ix</h4></section><section id=\"method.into_weighted_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/lib.rs.html#261\">source</a><a href=\"#method.into_weighted_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html#tymethod.into_weighted_edge\" class=\"fn\">into_weighted_edge</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ix, Ix, E)</a></h4></section></div></details>","IntoWeightedEdge<E>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Layer%3CS%3E-for-(L1,+L2)\" class=\"impl\"><a href=\"#impl-Layer%3CS%3E-for-(L1,+L2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, L1, L2&gt; Layer&lt;S&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L1, L2)</a><div class=\"where\">where\n    L1: Layer&lt;&lt;L2 as Layer&lt;S&gt;&gt;::Service&gt;,\n    L2: Layer&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Service\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Service\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Service</a> = &lt;L1 as Layer&lt;&lt;L2 as Layer&lt;S&gt;&gt;::Service&gt;&gt;::Service</h4></section></summary><div class='docblock'>The wrapped service</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>(&amp;self, service: S) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L1, L2)</a> as Layer&lt;S&gt;&gt;::Service</h4></section></summary><div class='docblock'>Wrap the given service with the middleware, returning a new service\nthat has been decorated with the middleware.</div></details></div></details>","Layer<S>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, Res, S, B&gt; Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    Res: IntoResponse,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    _req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    _state: S\n) -&gt; &lt;F as Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<((),), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T16: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7), S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRequest%3CS,+B%3E-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-FromRequest%3CS,+B%3E-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, B, T1, T2&gt; FromRequest&lt;S, B&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, B&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Rejection\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Rejection\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Rejection</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>If the extractor fails it’ll use this “rejection” type. A rejection is\na kind of error that can be converted into a response.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_request\" class=\"method trait-impl\"><a href=\"#method.from_request\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_request</a>&lt;'life0, 'async_trait&gt;(\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'life0 S</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a> as FromRequest&lt;S, B&gt;&gt;::Rejection&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>: 'async_trait,</div></h4></section></summary><div class='docblock'>Perform the extraction.</div></details></div></details>","FromRequest<S, B>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponseParts-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-IntoResponseParts-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; IntoResponseParts for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: IntoResponseParts,\n    T2: IntoResponseParts,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>The type returned in the event of an error. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response_parts\" class=\"method trait-impl\"><a href=\"#method.into_response_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response_parts</a>(\n    self,\n    res: ResponseParts\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ResponseParts, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a> as IntoResponseParts&gt;::Error&gt;</h4></section></summary><div class='docblock'>Set parts of the response</div></details></div></details>","IntoResponseParts","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRequestParts%3CS%3E-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-FromRequestParts%3CS%3E-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T1, T2&gt; FromRequestParts&lt;S&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Rejection\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Rejection\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Rejection</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>If the extractor fails it’ll use this “rejection” type. A rejection is\na kind of error that can be converted into a response.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_request_parts\" class=\"method trait-impl\"><a href=\"#method.from_request_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_request_parts</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    parts: &amp;'life0 mut <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Parts.html\" title=\"struct http::request::Parts\">Parts</a>,\n    state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'life1 S</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a> as FromRequestParts&lt;S&gt;&gt;::Rejection&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>: 'async_trait,</div></h4></section></summary><div class='docblock'>Perform the extraction.</div></details></div></details>","FromRequestParts<S>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponse-for-(T1,+R)\" class=\"impl\"><a href=\"#impl-IntoResponse-for-(T1,+R)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R, T1&gt; IntoResponse for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, R)</a><div class=\"where\">where\n    T1: IntoResponseParts,\n    R: IntoResponse,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response\" class=\"method trait-impl\"><a href=\"#method.into_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>Create a response.</div></details></div></details>","IntoResponse","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DeserializeAs%3C'de,+(T0,+T1)%3E-for-(As0,+As1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/de/impls.rs.html#539\">source</a><a href=\"#impl-DeserializeAs%3C'de,+(T0,+T1)%3E-for-(As0,+As1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, As0, T1, As1&gt; <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(As0, As1)</a><div class=\"where\">where\n    As0: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, T0&gt;,\n    As1: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_as\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/de/impls.rs.html#539\">source</a><a href=\"#method.deserialize_as\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html#tymethod.deserialize_as\" class=\"fn\">deserialize_as</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer.</div></details></div></details>","DeserializeAs<'de, (T0, T1)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SerializeAs%3C(T0,+T1)%3E-for-(As0,+As1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/ser/impls.rs.html#363\">source</a><a href=\"#impl-SerializeAs%3C(T0,+T1)%3E-for-(As0,+As1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, As0, T1, As1&gt; <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(As0, As1)</a><div class=\"where\">where\n    As0: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;T0&gt;,\n    As1: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_as\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/ser/impls.rs.html#363\">source</a><a href=\"#method.serialize_as\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html#tymethod.serialize_as\" class=\"fn\">serialize_as</a>&lt;S&gt;(\n    tuple: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer.</div></details></div></details>","SerializeAs<(T0, T1)>","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Zeroable-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: Zeroable,\n    B: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/nightly/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","meta_client::client::Id"],["<section id=\"impl-ZeroizeOnDrop-for-(A,+B)\" class=\"impl\"><a href=\"#impl-ZeroizeOnDrop-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; ZeroizeOnDrop for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: ZeroizeOnDrop,\n    B: ZeroizeOnDrop,</div></h3></section>","ZeroizeOnDrop","meta_client::client::Id"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Zeroize-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; Zeroize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: Zeroize,\n    B: Zeroize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","meta_client::client::Id"]],
"mito2":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, Res, S, B&gt; Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    Res: IntoResponse,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    _req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    _state: S\n) -&gt; &lt;F as Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<((),), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T16: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7), S, B>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","mito2::sst::file::FileTimeRange"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","mito2::sst::file::FileTimeRange"]],
"promql":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#398-401\">source</a></span><a href=\"#impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, ExtendA, ExtendB&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(ExtendA, ExtendB)</a><div class=\"where\">where\n    ExtendA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    ExtendB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#423\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, into_iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows to <code>extend</code> a tuple of collections that also implement <code>Extend</code>.</p>\n<p>See also: <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" title=\"method core::iter::traits::iterator::Iterator::unzip\"><code>Iterator::unzip</code></a></p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]);\ntuple.extend([(<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>), (<span class=\"number\">6</span>, <span class=\"number\">7</span>)]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">0</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">1</span>, [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);\n\n<span class=\"comment\">// also allows for arbitrarily nested tuples as elements\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>nested_tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], (<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>]));\nnested_tuple.extend([(<span class=\"number\">4</span>, (<span class=\"number\">5</span>, <span class=\"number\">6</span>)), (<span class=\"number\">7</span>, (<span class=\"number\">8</span>, <span class=\"number\">9</span>))]);\n\n<span class=\"kw\">let </span>(a, (b, c)) = nested_tuple;\n<span class=\"macro\">assert_eq!</span>(a, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>]);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]);\n<span class=\"macro\">assert_eq!</span>(c, [<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#446\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#451\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(A, B)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/tuple.rs.html#360\">source</a></span><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/tuple.rs.html#360\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-(S,+T)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#impl-Bounded-for-(S,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T)</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T)</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T)</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/ser/impls.rs.html#406-423\">source</a><a href=\"#impl-Serialize-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/ser/impls.rs.html#406-423\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/impls.rs.html#1366-1383\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/impls.rs.html#1366-1383\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWeightedEdge%3CE%3E-for-(Ix,+Ix)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/lib.rs.html#255-257\">source</a><a href=\"#impl-IntoWeightedEdge%3CE%3E-for-(Ix,+Ix)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ix, E&gt; <a class=\"trait\" href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html\" title=\"trait petgraph::IntoWeightedEdge\">IntoWeightedEdge</a>&lt;E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ix, Ix)</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.NodeId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NodeId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html#associatedtype.NodeId\" class=\"associatedtype\">NodeId</a> = Ix</h4></section><section id=\"method.into_weighted_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/lib.rs.html#261\">source</a><a href=\"#method.into_weighted_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html#tymethod.into_weighted_edge\" class=\"fn\">into_weighted_edge</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ix, Ix, E)</a></h4></section></div></details>","IntoWeightedEdge<E>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Layer%3CS%3E-for-(L1,+L2)\" class=\"impl\"><a href=\"#impl-Layer%3CS%3E-for-(L1,+L2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, L1, L2&gt; Layer&lt;S&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L1, L2)</a><div class=\"where\">where\n    L1: Layer&lt;&lt;L2 as Layer&lt;S&gt;&gt;::Service&gt;,\n    L2: Layer&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Service\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Service\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Service</a> = &lt;L1 as Layer&lt;&lt;L2 as Layer&lt;S&gt;&gt;::Service&gt;&gt;::Service</h4></section></summary><div class='docblock'>The wrapped service</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>(&amp;self, service: S) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L1, L2)</a> as Layer&lt;S&gt;&gt;::Service</h4></section></summary><div class='docblock'>Wrap the given service with the middleware, returning a new service\nthat has been decorated with the middleware.</div></details></div></details>","Layer<S>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, Res, S, B&gt; Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    Res: IntoResponse,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    _req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    _state: S\n) -&gt; &lt;F as Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<((),), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T16: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7), S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRequest%3CS,+B%3E-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-FromRequest%3CS,+B%3E-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, B, T1, T2&gt; FromRequest&lt;S, B&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, B&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Rejection\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Rejection\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Rejection</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>If the extractor fails it’ll use this “rejection” type. A rejection is\na kind of error that can be converted into a response.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_request\" class=\"method trait-impl\"><a href=\"#method.from_request\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_request</a>&lt;'life0, 'async_trait&gt;(\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'life0 S</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a> as FromRequest&lt;S, B&gt;&gt;::Rejection&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>: 'async_trait,</div></h4></section></summary><div class='docblock'>Perform the extraction.</div></details></div></details>","FromRequest<S, B>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponseParts-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-IntoResponseParts-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; IntoResponseParts for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: IntoResponseParts,\n    T2: IntoResponseParts,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>The type returned in the event of an error. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response_parts\" class=\"method trait-impl\"><a href=\"#method.into_response_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response_parts</a>(\n    self,\n    res: ResponseParts\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ResponseParts, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a> as IntoResponseParts&gt;::Error&gt;</h4></section></summary><div class='docblock'>Set parts of the response</div></details></div></details>","IntoResponseParts","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRequestParts%3CS%3E-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-FromRequestParts%3CS%3E-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T1, T2&gt; FromRequestParts&lt;S&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Rejection\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Rejection\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Rejection</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>If the extractor fails it’ll use this “rejection” type. A rejection is\na kind of error that can be converted into a response.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_request_parts\" class=\"method trait-impl\"><a href=\"#method.from_request_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_request_parts</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    parts: &amp;'life0 mut <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Parts.html\" title=\"struct http::request::Parts\">Parts</a>,\n    state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'life1 S</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a> as FromRequestParts&lt;S&gt;&gt;::Rejection&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>: 'async_trait,</div></h4></section></summary><div class='docblock'>Perform the extraction.</div></details></div></details>","FromRequestParts<S>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponse-for-(T1,+R)\" class=\"impl\"><a href=\"#impl-IntoResponse-for-(T1,+R)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R, T1&gt; IntoResponse for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, R)</a><div class=\"where\">where\n    T1: IntoResponseParts,\n    R: IntoResponse,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response\" class=\"method trait-impl\"><a href=\"#method.into_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>Create a response.</div></details></div></details>","IntoResponse","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DeserializeAs%3C'de,+(T0,+T1)%3E-for-(As0,+As1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/de/impls.rs.html#539\">source</a><a href=\"#impl-DeserializeAs%3C'de,+(T0,+T1)%3E-for-(As0,+As1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, As0, T1, As1&gt; <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(As0, As1)</a><div class=\"where\">where\n    As0: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, T0&gt;,\n    As1: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_as\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/de/impls.rs.html#539\">source</a><a href=\"#method.deserialize_as\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html#tymethod.deserialize_as\" class=\"fn\">deserialize_as</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer.</div></details></div></details>","DeserializeAs<'de, (T0, T1)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SerializeAs%3C(T0,+T1)%3E-for-(As0,+As1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/ser/impls.rs.html#363\">source</a><a href=\"#impl-SerializeAs%3C(T0,+T1)%3E-for-(As0,+As1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, As0, T1, As1&gt; <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(As0, As1)</a><div class=\"where\">where\n    As0: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;T0&gt;,\n    As1: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_as\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/ser/impls.rs.html#363\">source</a><a href=\"#method.serialize_as\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html#tymethod.serialize_as\" class=\"fn\">serialize_as</a>&lt;S&gt;(\n    tuple: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer.</div></details></div></details>","SerializeAs<(T0, T1)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Zeroable-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: Zeroable,\n    B: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/nightly/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","promql::range_array::RangeTuple"],["<section id=\"impl-ZeroizeOnDrop-for-(A,+B)\" class=\"impl\"><a href=\"#impl-ZeroizeOnDrop-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; ZeroizeOnDrop for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: ZeroizeOnDrop,\n    B: ZeroizeOnDrop,</div></h3></section>","ZeroizeOnDrop","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Zeroize-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; Zeroize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: Zeroize,\n    B: Zeroize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","promql::range_array::RangeTuple"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","promql::range_array::RangeTuple"]],
"servers":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.56.0\">1.56.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#398-401\">source</a></span><a href=\"#impl-Extend%3C(A,+B)%3E-for-(ExtendA,+ExtendB)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, ExtendA, ExtendB&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(ExtendA, ExtendB)</a><div class=\"where\">where\n    ExtendA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    ExtendB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#423\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;T&gt;(&amp;mut self, into_iter: T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Allows to <code>extend</code> a tuple of collections that also implement <code>Extend</code>.</p>\n<p>See also: <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" title=\"method core::iter::traits::iterator::Iterator::unzip\"><code>Iterator::unzip</code></a></p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>]);\ntuple.extend([(<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>), (<span class=\"number\">6</span>, <span class=\"number\">7</span>)]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">0</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>]);\n<span class=\"macro\">assert_eq!</span>(tuple.<span class=\"number\">1</span>, [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>]);\n\n<span class=\"comment\">// also allows for arbitrarily nested tuples as elements\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>nested_tuple = (<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], (<span class=\"macro\">vec!</span>[<span class=\"number\">2</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>]));\nnested_tuple.extend([(<span class=\"number\">4</span>, (<span class=\"number\">5</span>, <span class=\"number\">6</span>)), (<span class=\"number\">7</span>, (<span class=\"number\">8</span>, <span class=\"number\">9</span>))]);\n\n<span class=\"kw\">let </span>(a, (b, c)) = nested_tuple;\n<span class=\"macro\">assert_eq!</span>(a, [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">7</span>]);\n<span class=\"macro\">assert_eq!</span>(b, [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>]);\n<span class=\"macro\">assert_eq!</span>(c, [<span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">9</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#446\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#451\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<(A, B)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/tuple.rs.html#360\">source</a></span><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-(T,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 2]</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, T)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/tuple.rs.html#360\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(array: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[T; 2]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-(S,+T)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#impl-Bounded-for-(S,+T)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T)</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T)</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/bounds.rs.html#112\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(S, T)</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/ser/impls.rs.html#406-423\">source</a><a href=\"#impl-Serialize-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/ser/impls.rs.html#406-423\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/impls.rs.html#1366-1383\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde/1.0.193/src/serde/de/impls.rs.html#1366-1383\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWeightedEdge%3CE%3E-for-(Ix,+Ix)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/lib.rs.html#255-257\">source</a><a href=\"#impl-IntoWeightedEdge%3CE%3E-for-(Ix,+Ix)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ix, E&gt; <a class=\"trait\" href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html\" title=\"trait petgraph::IntoWeightedEdge\">IntoWeightedEdge</a>&lt;E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ix, Ix)</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.NodeId\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.NodeId\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html#associatedtype.NodeId\" class=\"associatedtype\">NodeId</a> = Ix</h4></section><section id=\"method.into_weighted_edge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/petgraph/0.4/src/petgraph/lib.rs.html#261\">source</a><a href=\"#method.into_weighted_edge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/petgraph/0.4/petgraph/trait.IntoWeightedEdge.html#tymethod.into_weighted_edge\" class=\"fn\">into_weighted_edge</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ix, Ix, E)</a></h4></section></div></details>","IntoWeightedEdge<E>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Layer%3CS%3E-for-(L1,+L2)\" class=\"impl\"><a href=\"#impl-Layer%3CS%3E-for-(L1,+L2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, L1, L2&gt; Layer&lt;S&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L1, L2)</a><div class=\"where\">where\n    L1: Layer&lt;&lt;L2 as Layer&lt;S&gt;&gt;::Service&gt;,\n    L2: Layer&lt;S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Service\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Service\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Service</a> = &lt;L1 as Layer&lt;&lt;L2 as Layer&lt;S&gt;&gt;::Service&gt;&gt;::Service</h4></section></summary><div class='docblock'>The wrapped service</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>(&amp;self, service: S) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(L1, L2)</a> as Layer&lt;S&gt;&gt;::Service</h4></section></summary><div class='docblock'>Wrap the given service with the middleware, returning a new service\nthat has been decorated with the middleware.</div></details></div></details>","Layer<S>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C((),),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, Res, S, B&gt; Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    Res: IntoResponse,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    _req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    _state: S\n) -&gt; &lt;F as Handler&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>,), S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<((),), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T16: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T15: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T8: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T9: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T10: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T11: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T12: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T13: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T14: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"impl\"><a href=\"#impl-Handler%3C(M,+T1,+T2,+T3,+T4,+T5,+T6,+T7),+S,+B%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Fut, S, B, Res, M, T1, T2, T3, T4, T5, T6, T7&gt; Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T1, T2, T3, T4, T5, T6, T7) -&gt; Fut + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = Res&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Res: IntoResponse,\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T3: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T4: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T5: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T6: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T7: FromRequest&lt;S, B, M&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of future calling this handler returns.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(\n    self,\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: S\n) -&gt; &lt;F as Handler&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(M, T1, T2, T3, T4, T5, T6, T7)</a>, S, B&gt;&gt;::Future</h4></section></summary><div class='docblock'>Call the handler with the given request.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layer\" class=\"method trait-impl\"><a href=\"#method.layer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layer</a>&lt;L, NewReqBody&gt;(self, layer: L) -&gt; Layered&lt;L, Self, T, S, B, NewReqBody&gt;<div class=\"where\">where\n    L: Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Layer&lt;HandlerService&lt;Self, T, S, B&gt;&gt;&gt;::Service: Service&lt;<a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;NewReqBody&gt;&gt;,</div></h4></section></summary><div class='docblock'>Apply a [<code>tower::Layer</code>] to the handler. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_state\" class=\"method trait-impl\"><a href=\"#method.with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_state</a>(self, state: S) -&gt; HandlerService&lt;Self, T, S, B&gt;</h4></section></summary><div class='docblock'>Convert the handler into a [<code>Service</code>] by providing the state</div></details></div></details>","Handler<(M, T1, T2, T3, T4, T5, T6, T7), S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRequest%3CS,+B%3E-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-FromRequest%3CS,+B%3E-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, B, T1, T2&gt; FromRequest&lt;S, B&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequest&lt;S, B&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Rejection\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Rejection\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Rejection</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>If the extractor fails it’ll use this “rejection” type. A rejection is\na kind of error that can be converted into a response.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_request\" class=\"method trait-impl\"><a href=\"#method.from_request\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_request</a>&lt;'life0, 'async_trait&gt;(\n    req: <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Request.html\" title=\"struct http::request::Request\">Request</a>&lt;B&gt;,\n    state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'life0 S</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a> as FromRequest&lt;S, B&gt;&gt;::Rejection&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>: 'async_trait,</div></h4></section></summary><div class='docblock'>Perform the extraction.</div></details></div></details>","FromRequest<S, B>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponseParts-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-IntoResponseParts-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; IntoResponseParts for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: IntoResponseParts,\n    T2: IntoResponseParts,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>The type returned in the event of an error. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response_parts\" class=\"method trait-impl\"><a href=\"#method.into_response_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response_parts</a>(\n    self,\n    res: ResponseParts\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ResponseParts, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a> as IntoResponseParts&gt;::Error&gt;</h4></section></summary><div class='docblock'>Set parts of the response</div></details></div></details>","IntoResponseParts","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRequestParts%3CS%3E-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-FromRequestParts%3CS%3E-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T1, T2&gt; FromRequestParts&lt;S&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T2: FromRequestParts&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Rejection\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Rejection\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Rejection</a> = <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>If the extractor fails it’ll use this “rejection” type. A rejection is\na kind of error that can be converted into a response.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_request_parts\" class=\"method trait-impl\"><a href=\"#method.from_request_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_request_parts</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    parts: &amp;'life0 mut <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/request/struct.Parts.html\" title=\"struct http::request::Parts\">Parts</a>,\n    state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'life1 S</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a> as FromRequestParts&lt;S&gt;&gt;::Rejection&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>: 'async_trait,</div></h4></section></summary><div class='docblock'>Perform the extraction.</div></details></div></details>","FromRequestParts<S>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponse-for-(T1,+R)\" class=\"impl\"><a href=\"#impl-IntoResponse-for-(T1,+R)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R, T1&gt; IntoResponse for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, R)</a><div class=\"where\">where\n    T1: IntoResponseParts,\n    R: IntoResponse,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response\" class=\"method trait-impl\"><a href=\"#method.into_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/http/0.2.11/http/response/struct.Response.html\" title=\"struct http::response::Response\">Response</a>&lt;<a class=\"struct\" href=\"https://docs.rs/http-body/0.4.6/http_body/combinators/box_body/struct.UnsyncBoxBody.html\" title=\"struct http_body::combinators::box_body::UnsyncBoxBody\">UnsyncBoxBody</a>&lt;Bytes, Error&gt;&gt;</h4></section></summary><div class='docblock'>Create a response.</div></details></div></details>","IntoResponse","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DeserializeAs%3C'de,+(T0,+T1)%3E-for-(As0,+As1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/de/impls.rs.html#539\">source</a><a href=\"#impl-DeserializeAs%3C'de,+(T0,+T1)%3E-for-(As0,+As1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, As0, T1, As1&gt; <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(As0, As1)</a><div class=\"where\">where\n    As0: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, T0&gt;,\n    As1: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html\" title=\"trait serde_with::de::DeserializeAs\">DeserializeAs</a>&lt;'de, T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_as\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/de/impls.rs.html#539\">source</a><a href=\"#method.deserialize_as\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_with/3.4.0/serde_with/de/trait.DeserializeAs.html#tymethod.deserialize_as\" class=\"fn\">deserialize_as</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer.</div></details></div></details>","DeserializeAs<'de, (T0, T1)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SerializeAs%3C(T0,+T1)%3E-for-(As0,+As1)\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/ser/impls.rs.html#363\">source</a><a href=\"#impl-SerializeAs%3C(T0,+T1)%3E-for-(As0,+As1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, As0, T1, As1&gt; <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(As0, As1)</a><div class=\"where\">where\n    As0: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;T0&gt;,\n    As1: <a class=\"trait\" href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html\" title=\"trait serde_with::ser::SerializeAs\">SerializeAs</a>&lt;T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_as\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.4.0/src/serde_with/ser/impls.rs.html#363\">source</a><a href=\"#method.serialize_as\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_with/3.4.0/serde_with/ser/trait.SerializeAs.html#tymethod.serialize_as\" class=\"fn\">serialize_as</a>&lt;S&gt;(\n    tuple: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a>,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer.</div></details></div></details>","SerializeAs<(T0, T1)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Zeroable-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: Zeroable,\n    B: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/nightly/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","servers::server::ServerHandler"],["<section id=\"impl-ZeroizeOnDrop-for-(A,+B)\" class=\"impl\"><a href=\"#impl-ZeroizeOnDrop-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; ZeroizeOnDrop for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: ZeroizeOnDrop,\n    B: ZeroizeOnDrop,</div></h3></section>","ZeroizeOnDrop","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Zeroize-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; Zeroize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: Zeroize,\n    B: Zeroize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OperationOutput-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-OperationOutput-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; OperationOutput for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Inner</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>The type that is used in examples. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.operation_response\" class=\"method trait-impl\"><a href=\"#method.operation_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">operation_response</a>(\n    ctx: &amp;mut GenContext,\n    operation: &amp;mut Operation\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Response&gt;</h4></section></summary><div class='docblock'>Return a response documentation for this type,\nalternatively modify the operation if required. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inferred_responses\" class=\"method trait-impl\"><a href=\"#method.inferred_responses\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inferred_responses</a>(\n    ctx: &amp;mut GenContext,\n    operation: &amp;mut Operation\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;, Response)&gt;</h4></section></summary><div class='docblock'>Inferred responses are used when the type is\nused as a request handler return type. <a>Read more</a></div></details></div></details>","OperationOutput","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OperationInput-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-OperationInput-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; OperationInput for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: OperationInput,\n    T2: OperationInput,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.operation_input\" class=\"method trait-impl\"><a href=\"#method.operation_input\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">operation_input</a>(ctx: &amp;mut GenContext, operation: &amp;mut Operation)</h4></section></summary><div class='docblock'>Modify the operation. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inferred_early_responses\" class=\"method trait-impl\"><a href=\"#method.inferred_early_responses\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inferred_early_responses</a>(\n    ctx: &amp;mut GenContext,\n    operation: &amp;mut Operation\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt;, Response)&gt;</h4></section></summary><div class='docblock'>Inferred early responses are used to document early returns for\nextractors, guards inside handlers. For example these could represent\nJSON parsing errors, authentication failures. <a>Read more</a></div></details></div></details>","OperationInput","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-JsonSchema-for-(T0,+T1)\" class=\"impl\"><a href=\"#impl-JsonSchema-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; JsonSchema for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: JsonSchema,\n    T1: JsonSchema,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_referenceable\" class=\"method trait-impl\"><a href=\"#method.is_referenceable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_referenceable</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether JSON Schemas generated for this type should be re-used where possible using the <code>$ref</code> keyword. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_name\" class=\"method trait-impl\"><a href=\"#method.schema_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>The name of the generated JSON Schema. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_id\" class=\"method trait-impl\"><a href=\"#method.schema_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_id</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns a string that uniquely identifies the schema produced by this type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.json_schema\" class=\"method trait-impl\"><a href=\"#method.json_schema\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">json_schema</a>(gen: &amp;mut SchemaGenerator) -&gt; Schema</h4></section></summary><div class='docblock'>Generates a JSON Schema for this type. <a>Read more</a></div></details></div></details>","JsonSchema","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tuple%3CInput,+(A,+B),+Error%3E-for-(FnA,+FnB)\" class=\"impl\"><a href=\"#impl-Tuple%3CInput,+(A,+B),+Error%3E-for-(FnA,+FnB)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Input, A, B, Error, FnA, FnB&gt; Tuple&lt;Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FnA, FnB)</a><div class=\"where\">where\n    Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Error: ParseError&lt;Input&gt;,\n    FnA: Parser&lt;Input, A, Error&gt;,\n    FnB: Parser&lt;Input, B, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse</a>(&amp;mut self, input: Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>), Err&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Parses the input and returns a tuple of results of each parser.</div></details></div></details>","Tuple<Input, (A, B), Error>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Permutation%3CInput,+(A,+B),+Error%3E-for-(FnA,+FnB)\" class=\"impl\"><a href=\"#impl-Permutation%3CInput,+(A,+B),+Error%3E-for-(FnA,+FnB)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Input, A, B, Error, FnA, FnB&gt; Permutation&lt;Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(FnA, FnB)</a><div class=\"where\">where\n    Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Error: ParseError&lt;Input&gt;,\n    FnA: Parser&lt;Input, A, Error&gt;,\n    FnB: Parser&lt;Input, B, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.permutation\" class=\"method trait-impl\"><a href=\"#method.permutation\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">permutation</a>(&amp;mut self, input: Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>), Err&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Tries to apply all parsers in the tuple in various orders until all of them succeed</div></details></div></details>","Permutation<Input, (A, B), Error>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alt%3CInput,+Output,+Error%3E-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Alt%3CInput,+Output,+Error%3E-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Input, Output, Error, A, B&gt; Alt&lt;Input, Output, Error&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Error: ParseError&lt;Input&gt;,\n    A: Parser&lt;Input, Output, Error&gt;,\n    B: Parser&lt;Input, Output, Error&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.choice\" class=\"method trait-impl\"><a href=\"#method.choice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">choice</a>(&amp;mut self, input: Input) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Input, Output)</a>, Err&lt;Error&gt;&gt;</h4></section></summary><div class='docblock'>Tests each parser in the tuple and returns the result of the first one that succeeds</div></details></div></details>","Alt<Input, Output, Error>","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromRow-for-(T1,+T2)\" class=\"impl\"><a href=\"#impl-FromRow-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; FromRow for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: FromValue,\n    T2: FromValue,\n    &lt;T1 as FromValue&gt;::Intermediate: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Value&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_row_opt\" class=\"method trait-impl\"><a href=\"#method.from_row_opt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_row_opt</a>(row: Row) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T2)</a>, FromRowError&gt;</h4></section><section id=\"method.from_row\" class=\"method trait-impl\"><a href=\"#method.from_row\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_row</a>(row: Row) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></div></details>","FromRow","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Semigroup-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Semigroup-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; Semigroup for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: Semigroup,\n    B: Semigroup,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.combine\" class=\"method trait-impl\"><a href=\"#method.combine\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">combine</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a></h4></section></summary><div class='docblock'>Associative operation taking which combines two values. <a>Read more</a></div></details></div></details>","Semigroup","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Monoid-for-(A,+B)\" class=\"impl\"><a href=\"#impl-Monoid-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; Monoid for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: Monoid,\n    B: Monoid,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method trait-impl\"><a href=\"#method.empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">empty</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(A, B)</a></h4></section></summary><div class='docblock'>For a given Monoid, returns its empty/zero value <a>Read more</a></div></details></div></details>","Monoid","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Generic-for-(T1,+T0)\" class=\"impl\"><a href=\"#impl-Generic-for-(T1,+T0)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T0&gt; Generic for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T0)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Repr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Repr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Repr</a> = HCons&lt;T1, HCons&lt;T0, HNil&gt;&gt;</h4></section></summary><div class='docblock'>The generic representation type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T0)</a> as Generic&gt;::Repr</h4></section></summary><div class='docblock'>Convert a value to its representation type <code>Repr</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from</a>(r: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T0)</a> as Generic&gt;::Repr) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T0)</a></h4></section></summary><div class='docblock'>Convert a value’s representation type <code>Repr</code> to the value’s type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.convert_from\" class=\"method trait-impl\"><a href=\"#method.convert_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">convert_from</a>&lt;Src&gt;(src: Src) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Src: Generic&lt;Repr = Self::Repr&gt;,</div></h4></section></summary><div class='docblock'>Convert a value to another type provided that they have\nthe same representation type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_repr\" class=\"method trait-impl\"><a href=\"#method.map_repr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">map_repr</a>&lt;Mapper&gt;(self, mapper: Mapper) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Mapper: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Self::Repr) -&gt; Self::Repr,</div></h4></section></summary><div class='docblock'>Maps the given value of type <code>Self</code> by first transforming it to\nthe representation type <code>Repr</code>, then applying a <code>mapper</code> function\non <code>Repr</code> and finally transforming it back to a value of type <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_inter\" class=\"method trait-impl\"><a href=\"#method.map_inter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">map_inter</a>&lt;Inter, Mapper&gt;(self, mapper: Mapper) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Inter: Generic&lt;Repr = Self::Repr&gt;,\n    Mapper: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Inter) -&gt; Inter,</div></h4></section></summary><div class='docblock'>Maps the given value of type <code>Self</code> by first transforming it\na type <code>Inter</code> that has the same representation type as <code>Self</code>,\nthen applying a <code>mapper</code> function on <code>Inter</code> and finally transforming\nit back to a value of type <code>Self</code>.</div></details></div></details>","Generic","servers::server::ServerHandler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Values-for-(T1,+T0)\" class=\"impl\"><a href=\"#impl-Values-for-(T1,+T0)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T0&gt; Values for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T1, T0)</a><div class=\"where\">where\n    T1: Values,\n    T0: Values,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method trait-impl\"><a href=\"#method.encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_len</a>(&amp;self, mode: Mode) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the length of the encoded values for the given mode.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_encoded\" class=\"method trait-impl\"><a href=\"#method.write_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_encoded</a>&lt;W&gt;(&amp;self, mode: Mode, target: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Encodes the values in the given mode and writes them to <code>target</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.explicit\" class=\"method trait-impl\"><a href=\"#method.explicit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">explicit</a>(self, tag: Tag) -&gt; Constructed&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts the encoder into one with an explicit tag.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_captured\" class=\"method trait-impl\"><a href=\"#method.to_captured\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_captured</a>(&amp;self, mode: Mode) -&gt; Captured</h4></section></summary><div class='docblock'>Captures the encoded values in the given mode.</div></details></div></details>","Values","servers::server::ServerHandler"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()